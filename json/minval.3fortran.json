{"blocks":[{"t":"Header","c":[3,["",[],[]],[{"t":"Strong","c":[{"t":"Str","c":"Name"}]}]]},{"t":"Para","c":[{"t":"Strong","c":[{"t":"Str","c":"minval"}]},{"t":"Str","c":"(3)"},{"t":"Space"},{"t":"Str","c":"-"},{"t":"Space"},{"t":"Str","c":"[ARRAY:REDUCTION]"},{"t":"Space"},{"t":"Str","c":"Minimum"},{"t":"Space"},{"t":"Str","c":"value"},{"t":"Space"},{"t":"Str","c":"of"},{"t":"Space"},{"t":"Str","c":"an"},{"t":"Space"},{"t":"Str","c":"array"}]},{"t":"Header","c":[3,["",[],[]],[{"t":"Strong","c":[{"t":"Str","c":"Synopsis"}]}]]},{"t":"CodeBlock","c":[["",["fortran"],[]],"    result = minval(array, [mask]) | minval(array [,dim] [,mask])\n"]},{"t":"CodeBlock","c":[["",["fortran"],[]],"     NUMERIC function minval(array, dim, mask)\n\n      NUMERIC,intent(in) :: array(..)\n      integer(kind=**),intent(in),optional :: dim\n      logical(kind=**),intent(in),optional :: mask(..)\n"]},{"t":"Header","c":[3,["",[],[]],[{"t":"Strong","c":[{"t":"Str","c":"Characteristics"}]}]]},{"t":"BulletList","c":[[{"t":"Plain","c":[{"t":"Str","c":"a"},{"t":"Space"},{"t":"Str","c":"kind"},{"t":"Space"},{"t":"Str","c":"designated"},{"t":"Space"},{"t":"Str","c":"as"},{"t":"Space"},{"t":"Str","c":"**"},{"t":"Space"},{"t":"Str","c":"may"},{"t":"Space"},{"t":"Str","c":"be"},{"t":"Space"},{"t":"Str","c":"any"},{"t":"Space"},{"t":"Str","c":"supported"},{"t":"Space"},{"t":"Str","c":"kind"},{"t":"Space"},{"t":"Str","c":"for"},{"t":"Space"},{"t":"Str","c":"the"},{"t":"Space"},{"t":"Str","c":"type"}]}],[{"t":"Plain","c":[{"t":"Strong","c":[{"t":"Str","c":"NUMERIC"}]},{"t":"Space"},{"t":"Str","c":"is"},{"t":"Space"},{"t":"Str","c":"any"},{"t":"Space"},{"t":"Str","c":"numeric"},{"t":"Space"},{"t":"Str","c":"type"},{"t":"Space"},{"t":"Str","c":"and"},{"t":"Space"},{"t":"Str","c":"kind."}]}]]},{"t":"Header","c":[3,["",[],[]],[{"t":"Strong","c":[{"t":"Str","c":"Description"}]}]]},{"t":"Para","c":[{"t":"Strong","c":[{"t":"Str","c":"minval"}]},{"t":"Str","c":"(3)"},{"t":"Space"},{"t":"Str","c":"determines"},{"t":"Space"},{"t":"Str","c":"the"},{"t":"Space"},{"t":"Str","c":"minimum"},{"t":"Space"},{"t":"Str","c":"value"},{"t":"Space"},{"t":"Str","c":"of"},{"t":"Space"},{"t":"Str","c":"the"},{"t":"Space"},{"t":"Str","c":"elements"},{"t":"Space"},{"t":"Str","c":"in"},{"t":"Space"},{"t":"Str","c":"an"},{"t":"Space"},{"t":"Str","c":"array"},{"t":"SoftBreak"},{"t":"Str","c":"value,"},{"t":"Space"},{"t":"Str","c":"or,"},{"t":"Space"},{"t":"Str","c":"if"},{"t":"Space"},{"t":"Str","c":"the"},{"t":"Space"},{"t":"Strong","c":[{"t":"Str","c":"dim"}]},{"t":"Space"},{"t":"Str","c":"argument"},{"t":"Space"},{"t":"Str","c":"is"},{"t":"Space"},{"t":"Str","c":"supplied,"},{"t":"Space"},{"t":"Str","c":"determines"},{"t":"Space"},{"t":"Str","c":"the"},{"t":"Space"},{"t":"Str","c":"minimum"},{"t":"SoftBreak"},{"t":"Str","c":"value"},{"t":"Space"},{"t":"Str","c":"along"},{"t":"Space"},{"t":"Str","c":"each"},{"t":"Space"},{"t":"Str","c":"row"},{"t":"Space"},{"t":"Str","c":"of"},{"t":"Space"},{"t":"Str","c":"the"},{"t":"Space"},{"t":"Str","c":"array"},{"t":"Space"},{"t":"Str","c":"in"},{"t":"Space"},{"t":"Str","c":"the"},{"t":"Space"},{"t":"Strong","c":[{"t":"Str","c":"dim"}]},{"t":"Space"},{"t":"Str","c":"direction."}]},{"t":"Para","c":[{"t":"Str","c":"If"},{"t":"Space"},{"t":"Strong","c":[{"t":"Str","c":"mask"}]},{"t":"Space"},{"t":"Str","c":"is"},{"t":"Space"},{"t":"Str","c":"present,"},{"t":"Space"},{"t":"Str","c":"only"},{"t":"Space"},{"t":"Str","c":"the"},{"t":"Space"},{"t":"Str","c":"elements"},{"t":"Space"},{"t":"Str","c":"for"},{"t":"Space"},{"t":"Str","c":"which"},{"t":"Space"},{"t":"Strong","c":[{"t":"Str","c":"mask"}]},{"t":"Space"},{"t":"Str","c":"is"},{"t":"SoftBreak"},{"t":"Emph","c":[{"t":"Str","c":".true."}]},{"t":"Space"},{"t":"Str","c":"are"},{"t":"Space"},{"t":"Str","c":"considered."}]},{"t":"Para","c":[{"t":"Str","c":"If"},{"t":"Space"},{"t":"Str","c":"the"},{"t":"Space"},{"t":"Str","c":"array"},{"t":"Space"},{"t":"Str","c":"has"},{"t":"Space"},{"t":"Str","c":"zero"},{"t":"Space"},{"t":"Str","c":"size,"},{"t":"Space"},{"t":"Str","c":"or"},{"t":"Space"},{"t":"Str","c":"all"},{"t":"Space"},{"t":"Str","c":"of"},{"t":"Space"},{"t":"Str","c":"the"},{"t":"Space"},{"t":"Str","c":"elements"},{"t":"Space"},{"t":"Str","c":"of"},{"t":"Space"},{"t":"Strong","c":[{"t":"Str","c":"mask"}]},{"t":"SoftBreak"},{"t":"Str","c":"are"},{"t":"Space"},{"t":"Emph","c":[{"t":"Str","c":".false."}]},{"t":"Str","c":","},{"t":"Space"},{"t":"Str","c":"then"},{"t":"Space"},{"t":"Str","c":"the"},{"t":"Space"},{"t":"Str","c":"result"},{"t":"Space"},{"t":"Str","c":"is"},{"t":"Space"},{"t":"Strong","c":[{"t":"Str","c":"huge(array)"}]},{"t":"Space"},{"t":"Str","c":"if"},{"t":"Space"},{"t":"Strong","c":[{"t":"Str","c":"array"}]},{"t":"Space"},{"t":"Str","c":"is"},{"t":"SoftBreak"},{"t":"Str","c":"numeric,"},{"t":"Space"},{"t":"Str","c":"or"},{"t":"Space"},{"t":"Str","c":"a"},{"t":"Space"},{"t":"Str","c":"string"},{"t":"Space"},{"t":"Str","c":"of"},{"t":"Space"},{"t":"Strong","c":[{"t":"Str","c":"char(len=255)"}]},{"t":"Space"},{"t":"Str","c":"characters"},{"t":"Space"},{"t":"Str","c":"if"},{"t":"Space"},{"t":"Strong","c":[{"t":"Str","c":"array"}]},{"t":"SoftBreak"},{"t":"Str","c":"is"},{"t":"Space"},{"t":"Str","c":"of"},{"t":"Space"},{"t":"Str","c":"character"},{"t":"Space"},{"t":"Str","c":"type."}]},{"t":"Header","c":[3,["",[],[]],[{"t":"Strong","c":[{"t":"Str","c":"Options"}]}]]},{"t":"BulletList","c":[[{"t":"Para","c":[{"t":"Strong","c":[{"t":"Str","c":"array"}]},{"t":"SoftBreak"},{"t":"Str","c":":"},{"t":"Space"},{"t":"Str","c":"Shall"},{"t":"Space"},{"t":"Str","c":"be"},{"t":"Space"},{"t":"Str","c":"an"},{"t":"Space"},{"t":"Str","c":"array"},{"t":"Space"},{"t":"Str","c":"of"},{"t":"Space"},{"t":"Str","c":"type"},{"t":"Space"},{"t":"Emph","c":[{"t":"Str","c":"integer"}]},{"t":"Str","c":","},{"t":"Space"},{"t":"Emph","c":[{"t":"Str","c":"real"}]},{"t":"Str","c":","},{"t":"Space"},{"t":"Str","c":"or"},{"t":"Space"},{"t":"Emph","c":[{"t":"Str","c":"character"}]},{"t":"Str","c":"."}]}],[{"t":"Para","c":[{"t":"Strong","c":[{"t":"Str","c":"dim"}]},{"t":"SoftBreak"},{"t":"Str","c":":"},{"t":"Space"},{"t":"Str","c":"(Optional)"},{"t":"Space"},{"t":"Str","c":"Shall"},{"t":"Space"},{"t":"Str","c":"be"},{"t":"Space"},{"t":"Str","c":"a"},{"t":"Space"},{"t":"Str","c":"scalar"},{"t":"Space"},{"t":"Str","c":"of"},{"t":"Space"},{"t":"Str","c":"type"},{"t":"Space"},{"t":"Emph","c":[{"t":"Str","c":"integer"}]},{"t":"Str","c":","},{"t":"Space"},{"t":"Str","c":"with"},{"t":"Space"},{"t":"Str","c":"a"},{"t":"Space"},{"t":"Str","c":"value"},{"t":"Space"},{"t":"Str","c":"between"},{"t":"SoftBreak"},{"t":"Str","c":"one"},{"t":"Space"},{"t":"Str","c":"and"},{"t":"Space"},{"t":"Str","c":"the"},{"t":"Space"},{"t":"Str","c":"rank"},{"t":"Space"},{"t":"Str","c":"of"},{"t":"Space"},{"t":"Str","c":"ARRAY,"},{"t":"Space"},{"t":"Str","c":"inclusive."},{"t":"Space"},{"t":"Str","c":"It"},{"t":"Space"},{"t":"Str","c":"may"},{"t":"Space"},{"t":"Str","c":"not"},{"t":"Space"},{"t":"Str","c":"be"},{"t":"Space"},{"t":"Str","c":"an"},{"t":"Space"},{"t":"Str","c":"optional"},{"t":"SoftBreak"},{"t":"Str","c":"dummy"},{"t":"Space"},{"t":"Str","c":"argument."}]}],[{"t":"Para","c":[{"t":"Strong","c":[{"t":"Str","c":"mask"}]},{"t":"SoftBreak"},{"t":"Str","c":":"},{"t":"Space"},{"t":"Str","c":"Shall"},{"t":"Space"},{"t":"Str","c":"be"},{"t":"Space"},{"t":"Str","c":"an"},{"t":"Space"},{"t":"Str","c":"array"},{"t":"Space"},{"t":"Str","c":"of"},{"t":"Space"},{"t":"Str","c":"type"},{"t":"Space"},{"t":"Emph","c":[{"t":"Str","c":"logical"}]},{"t":"Str","c":","},{"t":"Space"},{"t":"Str","c":"and"},{"t":"Space"},{"t":"Str","c":"conformable"},{"t":"Space"},{"t":"Str","c":"with"},{"t":"Space"},{"t":"Strong","c":[{"t":"Str","c":"array"}]},{"t":"Str","c":"."}]}]]},{"t":"Header","c":[3,["",[],[]],[{"t":"Strong","c":[{"t":"Str","c":"Result"}]}]]},{"t":"Para","c":[{"t":"Str","c":"If"},{"t":"Space"},{"t":"Strong","c":[{"t":"Str","c":"dim"}]},{"t":"Space"},{"t":"Str","c":"is"},{"t":"Space"},{"t":"Str","c":"absent,"},{"t":"Space"},{"t":"Str","c":"or"},{"t":"Space"},{"t":"Str","c":"if"},{"t":"Space"},{"t":"Strong","c":[{"t":"Str","c":"array"}]},{"t":"Space"},{"t":"Str","c":"has"},{"t":"Space"},{"t":"Str","c":"a"},{"t":"Space"},{"t":"Str","c":"rank"},{"t":"Space"},{"t":"Str","c":"of"},{"t":"Space"},{"t":"Str","c":"one,"},{"t":"Space"},{"t":"Str","c":"the"},{"t":"Space"},{"t":"Str","c":"result"},{"t":"Space"},{"t":"Str","c":"is"},{"t":"Space"},{"t":"Str","c":"a"},{"t":"Space"},{"t":"Str","c":"scalar."}]},{"t":"Para","c":[{"t":"Str","c":"If"},{"t":"Space"},{"t":"Strong","c":[{"t":"Str","c":"dim"}]},{"t":"Space"},{"t":"Str","c":"is"},{"t":"Space"},{"t":"Str","c":"present,"},{"t":"Space"},{"t":"Str","c":"the"},{"t":"Space"},{"t":"Str","c":"result"},{"t":"Space"},{"t":"Str","c":"is"},{"t":"Space"},{"t":"Str","c":"an"},{"t":"Space"},{"t":"Str","c":"array"},{"t":"Space"},{"t":"Str","c":"with"},{"t":"Space"},{"t":"Str","c":"a"},{"t":"Space"},{"t":"Str","c":"rank"},{"t":"Space"},{"t":"Str","c":"one"},{"t":"Space"},{"t":"Str","c":"less"},{"t":"Space"},{"t":"Str","c":"than"},{"t":"Space"},{"t":"Str","c":"the"},{"t":"SoftBreak"},{"t":"Str","c":"rank"},{"t":"Space"},{"t":"Str","c":"of"},{"t":"Space"},{"t":"Strong","c":[{"t":"Str","c":"array"}]},{"t":"Str","c":","},{"t":"Space"},{"t":"Str","c":"and"},{"t":"Space"},{"t":"Str","c":"a"},{"t":"Space"},{"t":"Str","c":"size"},{"t":"Space"},{"t":"Str","c":"corresponding"},{"t":"Space"},{"t":"Str","c":"to"},{"t":"Space"},{"t":"Str","c":"the"},{"t":"Space"},{"t":"Str","c":"size"},{"t":"Space"},{"t":"Str","c":"of"},{"t":"Space"},{"t":"Strong","c":[{"t":"Str","c":"array"}]},{"t":"Space"},{"t":"Str","c":"with"},{"t":"Space"},{"t":"Str","c":"the"},{"t":"SoftBreak"},{"t":"Strong","c":[{"t":"Str","c":"dim"}]},{"t":"Space"},{"t":"Str","c":"dimension"},{"t":"Space"},{"t":"Str","c":"removed."},{"t":"Space"},{"t":"Str","c":"In"},{"t":"Space"},{"t":"Str","c":"all"},{"t":"Space"},{"t":"Str","c":"cases,"},{"t":"Space"},{"t":"Str","c":"the"},{"t":"Space"},{"t":"Str","c":"result"},{"t":"Space"},{"t":"Str","c":"is"},{"t":"Space"},{"t":"Str","c":"of"},{"t":"Space"},{"t":"Str","c":"the"},{"t":"Space"},{"t":"Str","c":"same"},{"t":"Space"},{"t":"Str","c":"type"},{"t":"Space"},{"t":"Str","c":"and"},{"t":"SoftBreak"},{"t":"Str","c":"kind"},{"t":"Space"},{"t":"Str","c":"as"},{"t":"Space"},{"t":"Strong","c":[{"t":"Str","c":"array"}]},{"t":"Str","c":"."}]},{"t":"Header","c":[3,["",[],[]],[{"t":"Strong","c":[{"t":"Str","c":"Examples"}]}]]},{"t":"Para","c":[{"t":"Str","c":"sample"},{"t":"Space"},{"t":"Str","c":"program:"}]},{"t":"CodeBlock","c":[["",["fortran"],[]],"program demo_minval\nimplicit none\ninteger :: i\ncharacter(len=*),parameter :: g='(3x,*(g0,1x))'\n\ninteger,save :: ints(3,5)= reshape([&\n       1,  -2,   3,   4,   5,  &\n      10,  20, -30,  40,  50,  &\n      11,  22,  33, -44,  55  &\n],shape(ints),order=[2,1])\n\ninteger,save :: box(3,5,2)\n\n   box(:,:,1)=ints\n   box(:,:,2)=-ints\n\n   write(*,*)'Given the array'\n   write(*,'(1x,*(g4.4,1x))') &\n   & (ints(i,:),new_line('a'),i=1,size(ints,dim=1))\n\n   write(*,*)'What is the smallest element in the array?'\n   write(*,g) minval(ints),'at <',minloc(ints),'>'\n\n   write(*,*)'What is the smallest element in each column?'\n   write(*,g) minval(ints,dim=1)\n\n   write(*,*)'What is the smallest element in each row?'\n   write(*,g) minval(ints,dim=2)\n\n   ! notice the shape of the output has less columns\n   ! than the input in this case\n   write(*,*)'What is the smallest element in each column,'\n   write(*,*)'considering only those elements that are'\n   write(*,*)'greater than zero?'\n   write(*,g) minval(ints, dim=1, mask = ints > 0)\n\n   write(*,*)&\n   & 'if everything is false a zero-sized array is NOT returned'\n   write(*,*) minval(ints, dim=1, mask = .false.)\n   write(*,*)'even for a zero-sized input'\n   write(*,g) minval([integer ::], dim=1, mask = .false.)\n\n   write(*,*)'a scalar answer for everything false is huge()'\n   write(*,g) minval(ints, mask = .false.)\n   write(*,g) minval([integer ::], mask = .false.)\n\n   write(*,*)'some calls with three dimensions'\n   write(*,g) minval(box, mask = .true. )\n   write(*,g) minval(box, dim=1, mask = .true. )\n\n   write(*,g) minval(box, dim=2, mask = .true. )\n   write(*,g) 'shape of answer is ', &\n   & shape(minval(box, dim=2, mask = .true. ))\n\nend program demo_minval\n"]},{"t":"Para","c":[{"t":"Str","c":"Results:"}]},{"t":"CodeBlock","c":[["",["text"],[]]," > Given the array\n >    1   -2    3    4    5\n >   10   20  -30   40   50\n >   11   22   33  -44   55\n >\n > What is the smallest element in the array?\n >   -44 at < 3 4 >\n > What is the smallest element in each column?\n >   1 -2 -30 -44 5\n > What is the smallest element in each row?\n >   -2 -30 -44\n > What is the smallest element in each column,\n > considering only those elements that are\n > greater than zero?\n >   1 20 3 4 5\n > if everything is false a zero-sized array is NOT returned\n >  2147483647  2147483647  2147483647  2147483647  2147483647\n > even for a zero-sized input\n >   2147483647\n > a scalar answer for everything false is huge()\n >   2147483647\n >   2147483647\n > some calls with three dimensions\n >   -55\n >   1 -2 -30 -44 5 -11 -22 -33 -40 -55\n >   -2 -30 -44 -5 -50 -55\n >   shape of answer is  3 2\n"]},{"t":"Header","c":[3,["",[],[]],[{"t":"Strong","c":[{"t":"Str","c":"Standard"}]}]]},{"t":"Para","c":[{"t":"Str","c":"Fortran"},{"t":"Space"},{"t":"Str","c":"95"}]},{"t":"Header","c":[3,["",[],[]],[{"t":"Strong","c":[{"t":"Str","c":"See"},{"t":"Space"},{"t":"Str","c":"Also"}]}]]},{"t":"Para","c":[{"t":"Link","c":[["",[],[]],[{"t":"Strong","c":[{"t":"Str","c":"min"}]},{"t":"Str","c":"(3)"}],["#min",""]]},{"t":"Str","c":","},{"t":"SoftBreak"},{"t":"Link","c":[["",[],[]],[{"t":"Strong","c":[{"t":"Str","c":"minloc"}]},{"t":"Str","c":"(3)"}],["#minloc",""]]},{"t":"SoftBreak"},{"t":"Link","c":[["",[],[]],[{"t":"Strong","c":[{"t":"Str","c":"maxloc"}]},{"t":"Str","c":"(3)"}],["#maxloc",""]]},{"t":"Str","c":","},{"t":"SoftBreak"},{"t":"Link","c":[["",[],[]],[{"t":"Strong","c":[{"t":"Str","c":"maxval"}]},{"t":"Str","c":"(3)"}],["#maxval",""]]},{"t":"Str","c":","},{"t":"SoftBreak"},{"t":"Link","c":[["",[],[]],[{"t":"Strong","c":[{"t":"Str","c":"min"}]},{"t":"Str","c":"(3)"}],["#min",""]]}]},{"t":"Para","c":[{"t":"Emph","c":[{"t":"Str","c":"fortran-lang"},{"t":"Space"},{"t":"Str","c":"intrinsic"},{"t":"Space"},{"t":"Str","c":"descriptions"},{"t":"Space"},{"t":"Str","c":"(license:"},{"t":"Space"},{"t":"Str","c":"MIT)"},{"t":"Space"},{"t":"Str","c":"@urbanjost"}]}]}],"pandoc-api-version":[1,17,5,4],"meta":{}}
