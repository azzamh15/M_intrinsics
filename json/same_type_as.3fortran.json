{"blocks":[{"t":"Header","c":[3,["",[],[]],[{"t":"Strong","c":[{"t":"Str","c":"Name"}]}]]},{"t":"Para","c":[{"t":"Strong","c":[{"t":"Str","c":"same_type_as"}]},{"t":"Str","c":"(3)"},{"t":"Space"},{"t":"Str","c":"-"},{"t":"Space"},{"t":"Str","c":"[STATE:INQUIRY]"},{"t":"Space"},{"t":"Str","c":"Query"},{"t":"Space"},{"t":"Str","c":"dynamic"},{"t":"Space"},{"t":"Str","c":"types"},{"t":"Space"},{"t":"Str","c":"for"},{"t":"Space"},{"t":"Str","c":"equality"}]},{"t":"Header","c":[3,["",[],[]],[{"t":"Strong","c":[{"t":"Str","c":"Synopsis"}]}]]},{"t":"CodeBlock","c":[["",["fortran"],[]],"    result = same_type_as(a, b)\n"]},{"t":"CodeBlock","c":[["",["fortran"],[]],"     logical same_type_as(a, b)\n\n      type(TYPE(kind=KIND)),intent(in) :: a\n      type(TYPE(kind=KIND)),intent(in) :: b\n"]},{"t":"Header","c":[3,["",[],[]],[{"t":"Strong","c":[{"t":"Str","c":"Characteristics"}]}]]},{"t":"BulletList","c":[[{"t":"Para","c":[{"t":"Strong","c":[{"t":"Str","c":"a"}]},{"t":"Space"},{"t":"Str","c":"shall"},{"t":"Space"},{"t":"Str","c":"be"},{"t":"Space"},{"t":"Str","c":"an"},{"t":"Space"},{"t":"Str","c":"object"},{"t":"Space"},{"t":"Str","c":"of"},{"t":"Space"},{"t":"Str","c":"extensible"},{"t":"Space"},{"t":"Str","c":"declared"},{"t":"Space"},{"t":"Str","c":"type"},{"t":"Space"},{"t":"Str","c":"or"},{"t":"Space"},{"t":"Str","c":"unlimited"},{"t":"SoftBreak"},{"t":"Str","c":"polymorphic."},{"t":"Space"},{"t":"Str","c":"If"},{"t":"Space"},{"t":"Str","c":"it"},{"t":"Space"},{"t":"Str","c":"is"},{"t":"Space"},{"t":"Str","c":"a"},{"t":"Space"},{"t":"Str","c":"polymorphic"},{"t":"Space"},{"t":"Str","c":"pointer,"},{"t":"Space"},{"t":"Str","c":"it"},{"t":"Space"},{"t":"Str","c":"shall"},{"t":"Space"},{"t":"Str","c":"not"},{"t":"Space"},{"t":"Str","c":"have"},{"t":"SoftBreak"},{"t":"Str","c":"an"},{"t":"Space"},{"t":"Str","c":"undefined"},{"t":"Space"},{"t":"Str","c":"association"},{"t":"Space"},{"t":"Str","c":"status."}]}],[{"t":"Para","c":[{"t":"Strong","c":[{"t":"Str","c":"b"}]},{"t":"Space"},{"t":"Str","c":"shall"},{"t":"Space"},{"t":"Str","c":"be"},{"t":"Space"},{"t":"Str","c":"an"},{"t":"Space"},{"t":"Str","c":"object"},{"t":"Space"},{"t":"Str","c":"of"},{"t":"Space"},{"t":"Str","c":"extensible"},{"t":"Space"},{"t":"Str","c":"declared"},{"t":"Space"},{"t":"Str","c":"type"},{"t":"Space"},{"t":"Str","c":"or"},{"t":"Space"},{"t":"Str","c":"unlimited"},{"t":"SoftBreak"},{"t":"Str","c":"polymorphic."},{"t":"Space"},{"t":"Str","c":"If"},{"t":"Space"},{"t":"Str","c":"it"},{"t":"Space"},{"t":"Str","c":"is"},{"t":"Space"},{"t":"Str","c":"a"},{"t":"Space"},{"t":"Str","c":"polymorphic"},{"t":"Space"},{"t":"Str","c":"pointer,"},{"t":"Space"},{"t":"Str","c":"it"},{"t":"Space"},{"t":"Str","c":"shall"},{"t":"Space"},{"t":"Str","c":"not"},{"t":"Space"},{"t":"Str","c":"have"},{"t":"SoftBreak"},{"t":"Str","c":"an"},{"t":"Space"},{"t":"Str","c":"undefined"},{"t":"Space"},{"t":"Str","c":"association"},{"t":"Space"},{"t":"Str","c":"status."}]}]]},{"t":"Header","c":[3,["",[],[]],[{"t":"Strong","c":[{"t":"Str","c":"Description"}]}]]},{"t":"Para","c":[{"t":"Strong","c":[{"t":"Str","c":"same_type_as"}]},{"t":"Str","c":"(3)"},{"t":"Space"},{"t":"Str","c":"queries"},{"t":"Space"},{"t":"Str","c":"the"},{"t":"Space"},{"t":"Str","c":"dynamic"},{"t":"Space"},{"t":"Str","c":"types"},{"t":"Space"},{"t":"Str","c":"of"},{"t":"Space"},{"t":"Str","c":"objects"},{"t":"Space"},{"t":"Str","c":"for"},{"t":"Space"},{"t":"Str","c":"equality."}]},{"t":"Header","c":[3,["",[],[]],[{"t":"Strong","c":[{"t":"Str","c":"Options"}]}]]},{"t":"BulletList","c":[[{"t":"Para","c":[{"t":"Strong","c":[{"t":"Str","c":"a"}]},{"t":"SoftBreak"},{"t":"Str","c":":"},{"t":"Space"},{"t":"Str","c":"object"},{"t":"Space"},{"t":"Str","c":"to"},{"t":"Space"},{"t":"Str","c":"compare"},{"t":"Space"},{"t":"Str","c":"to"},{"t":"Space"},{"t":"Strong","c":[{"t":"Str","c":"b"}]},{"t":"Space"},{"t":"Str","c":"for"},{"t":"Space"},{"t":"Str","c":"equality"},{"t":"Space"},{"t":"Str","c":"of"},{"t":"Space"},{"t":"Str","c":"type"}]}],[{"t":"Para","c":[{"t":"Strong","c":[{"t":"Str","c":"b"}]},{"t":"SoftBreak"},{"t":"Str","c":":"},{"t":"Space"},{"t":"Str","c":"object"},{"t":"Space"},{"t":"Str","c":"to"},{"t":"Space"},{"t":"Str","c":"be"},{"t":"Space"},{"t":"Str","c":"compared"},{"t":"Space"},{"t":"Str","c":"to"},{"t":"Space"},{"t":"Str","c":"for"},{"t":"Space"},{"t":"Str","c":"equality"},{"t":"Space"},{"t":"Str","c":"of"},{"t":"Space"},{"t":"Str","c":"type"}]}]]},{"t":"Header","c":[3,["",[],[]],[{"t":"Strong","c":[{"t":"Str","c":"Result"}]}]]},{"t":"Para","c":[{"t":"Str","c":"If"},{"t":"Space"},{"t":"Str","c":"the"},{"t":"Space"},{"t":"Str","c":"dynamic"},{"t":"Space"},{"t":"Str","c":"type"},{"t":"Space"},{"t":"Str","c":"of"},{"t":"Space"},{"t":"Strong","c":[{"t":"Str","c":"a"}]},{"t":"Space"},{"t":"Str","c":"or"},{"t":"Space"},{"t":"Strong","c":[{"t":"Str","c":"b"}]},{"t":"Space"},{"t":"Str","c":"is"},{"t":"Space"},{"t":"Str","c":"extensible,"},{"t":"Space"},{"t":"Str","c":"the"},{"t":"Space"},{"t":"Str","c":"result"},{"t":"Space"},{"t":"Str","c":"is"},{"t":"Space"},{"t":"Str","c":"true"},{"t":"SoftBreak"},{"t":"Str","c":"if"},{"t":"Space"},{"t":"Str","c":"and"},{"t":"Space"},{"t":"Str","c":"only"},{"t":"Space"},{"t":"Str","c":"if"},{"t":"Space"},{"t":"Str","c":"the"},{"t":"Space"},{"t":"Str","c":"dynamic"},{"t":"Space"},{"t":"Str","c":"type"},{"t":"Space"},{"t":"Str","c":"of"},{"t":"Space"},{"t":"Strong","c":[{"t":"Str","c":"a"}]},{"t":"Space"},{"t":"Str","c":"is"},{"t":"Space"},{"t":"Str","c":"the"},{"t":"Space"},{"t":"Str","c":"same"},{"t":"Space"},{"t":"Str","c":"as"},{"t":"Space"},{"t":"Str","c":"the"},{"t":"Space"},{"t":"Str","c":"dynamic"},{"t":"SoftBreak"},{"t":"Str","c":"type"},{"t":"Space"},{"t":"Str","c":"of"},{"t":"Space"},{"t":"Strong","c":[{"t":"Str","c":"b"}]},{"t":"Str","c":"."},{"t":"Space"},{"t":"Str","c":"If"},{"t":"Space"},{"t":"Str","c":"neither"},{"t":"Space"},{"t":"Strong","c":[{"t":"Str","c":"a"}]},{"t":"Space"},{"t":"Str","c":"nor"},{"t":"Space"},{"t":"Strong","c":[{"t":"Str","c":"b"}]},{"t":"Space"},{"t":"Str","c":"has"},{"t":"Space"},{"t":"Str","c":"extensible"},{"t":"Space"},{"t":"Str","c":"dynamic"},{"t":"Space"},{"t":"Str","c":"type,"},{"t":"SoftBreak"},{"t":"Str","c":"the"},{"t":"Space"},{"t":"Str","c":"result"},{"t":"Space"},{"t":"Str","c":"is"},{"t":"Space"},{"t":"Str","c":"processor"},{"t":"Space"},{"t":"Str","c":"dependent."}]},{"t":"CodeBlock","c":[["",[],[]],"NOTE1\n"]},{"t":"Para","c":[{"t":"Str","c":"The"},{"t":"Space"},{"t":"Str","c":"dynamic"},{"t":"Space"},{"t":"Str","c":"type"},{"t":"Space"},{"t":"Str","c":"of"},{"t":"Space"},{"t":"Str","c":"a"},{"t":"Space"},{"t":"Str","c":"disassociated"},{"t":"Space"},{"t":"Str","c":"pointer"},{"t":"Space"},{"t":"Str","c":"or"},{"t":"Space"},{"t":"Str","c":"unallocated"},{"t":"Space"},{"t":"Str","c":"allocatable"},{"t":"SoftBreak"},{"t":"Str","c":"variable"},{"t":"Space"},{"t":"Str","c":"is"},{"t":"Space"},{"t":"Str","c":"its"},{"t":"Space"},{"t":"Str","c":"declared"},{"t":"Space"},{"t":"Str","c":"type."},{"t":"Space"},{"t":"Str","c":"An"},{"t":"Space"},{"t":"Str","c":"unlimited"},{"t":"Space"},{"t":"Str","c":"polymorphic"},{"t":"Space"},{"t":"Str","c":"entity"},{"t":"Space"},{"t":"Str","c":"has"},{"t":"Space"},{"t":"Str","c":"no"},{"t":"SoftBreak"},{"t":"Str","c":"declared"},{"t":"Space"},{"t":"Str","c":"type."}]},{"t":"CodeBlock","c":[["",[],[]],"NOTE2\n"]},{"t":"Para","c":[{"t":"Str","c":"The"},{"t":"Space"},{"t":"Str","c":"test"},{"t":"Space"},{"t":"Str","c":"performed"},{"t":"Space"},{"t":"Str","c":"by"},{"t":"Space"},{"t":"Str","c":"SAME_TYPE_AS"},{"t":"Space"},{"t":"Str","c":"is"},{"t":"Space"},{"t":"Str","c":"not"},{"t":"Space"},{"t":"Str","c":"the"},{"t":"Space"},{"t":"Str","c":"same"},{"t":"Space"},{"t":"Str","c":"as"},{"t":"Space"},{"t":"Str","c":"the"},{"t":"Space"},{"t":"Str","c":"test"},{"t":"Space"},{"t":"Str","c":"performed"},{"t":"SoftBreak"},{"t":"Str","c":"by"},{"t":"Space"},{"t":"Str","c":"the"},{"t":"Space"},{"t":"Str","c":"type"},{"t":"Space"},{"t":"Str","c":"guard"},{"t":"Space"},{"t":"Str","c":"TYPE"},{"t":"Space"},{"t":"Str","c":"IS."},{"t":"Space"},{"t":"Str","c":"The"},{"t":"Space"},{"t":"Str","c":"test"},{"t":"Space"},{"t":"Str","c":"performed"},{"t":"Space"},{"t":"Str","c":"by"},{"t":"Space"},{"t":"Str","c":"SAME_TYPE_AS"},{"t":"Space"},{"t":"Str","c":"does"},{"t":"SoftBreak"},{"t":"Str","c":"not"},{"t":"Space"},{"t":"Str","c":"consider"},{"t":"Space"},{"t":"Str","c":"kind"},{"t":"Space"},{"t":"Str","c":"type"},{"t":"Space"},{"t":"Str","c":"parameters."}]},{"t":"Para","c":[{"t":"Str","c":"Sample"},{"t":"Space"},{"t":"Str","c":"program:"}]},{"t":"CodeBlock","c":[["",["fortran"],[]],"  ! program demo_same_type_as\n  module M_ether\n  implicit none\n  private\n\n  type   :: dot\n    real :: x=0\n    real :: y=0\n  end type dot\n\n  type, extends(dot) :: point\n    real :: z=0\n  end type point\n\n  type something_else\n  end type something_else\n\n  public :: dot\n  public :: point\n  public :: something_else\n\n  end module M_ether\n\n  program demo_same_type_as\n  use M_ether, only : dot, point, something_else\n  implicit none\n  type(dot) :: dad, mom\n  type(point) :: me\n  type(something_else) :: alien\n\n   write(*,*)same_type_as(me,dad),'I am descended from Dad, but equal?'\n   write(*,*)same_type_as(me,me) ,'I am what I am'\n   write(*,*)same_type_as(dad,mom) ,'what a pair!'\n\n   write(*,*)same_type_as(dad,me),'no paradox here'\n   write(*,*)same_type_as(dad,alien),'no relation'\n\n   call pointers()\n   contains\n   subroutine pointers()\n   ! Given the declarations and assignments\n   type t1\n      real c\n   end type\n   type, extends(t1) :: t2\n   end type\n   class(t1), pointer :: p, q, r\n      allocate (p, q)\n      allocate (t2 :: r)\n      ! the result of SAME_TYPE_AS (P, Q) will be true, and the result\n      ! of SAME_TYPE_AS (P, R) will be false.\n      write(*,*)'(P,Q)',same_type_as(p,q),\"mind your P's and Q's\"\n      write(*,*)'(P,R)',same_type_as(p,r)\n   end subroutine pointers\n\n  end program demo_same_type_as\n"]},{"t":"Para","c":[{"t":"Str","c":"Results:"}]},{"t":"CodeBlock","c":[["",["text"],[]],"    F I am descended from Dad, but equal?\n    T I am what I am\n    T what a pair!\n    F no paradox here\n    F no relation\n    (P,Q) T mind your P's and Q's\n    (P,R) F\n"]},{"t":"Header","c":[3,["",[],[]],[{"t":"Strong","c":[{"t":"Str","c":"Standard"}]}]]},{"t":"Para","c":[{"t":"Str","c":"Fortran"},{"t":"Space"},{"t":"Str","c":"2003"}]},{"t":"Header","c":[3,["",[],[]],[{"t":"Strong","c":[{"t":"Str","c":"See"},{"t":"Space"},{"t":"Str","c":"Also"}]}]]},{"t":"Para","c":[{"t":"Link","c":[["",[],[]],[{"t":"Strong","c":[{"t":"Str","c":"extends_type_of"}]},{"t":"Str","c":"(3)"}],["#extends_type_of",""]]}]},{"t":"Para","c":[{"t":"Emph","c":[{"t":"Str","c":"fortran-lang"},{"t":"Space"},{"t":"Str","c":"intrinsic"},{"t":"Space"},{"t":"Str","c":"descriptions"}]}]}],"pandoc-api-version":[1,17,5,4],"meta":{}}
