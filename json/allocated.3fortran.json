{"blocks":[{"t":"Header","c":[3,["",[],[]],[{"t":"Strong","c":[{"t":"Str","c":"Name"}]}]]},{"t":"Para","c":[{"t":"Strong","c":[{"t":"Str","c":"allocated"}]},{"t":"Str","c":"(3)"},{"t":"Space"},{"t":"Str","c":"-"},{"t":"Space"},{"t":"Str","c":"[ARRAY:INQUIRY]"},{"t":"Space"},{"t":"Str","c":"Allocation"},{"t":"Space"},{"t":"Str","c":"status"},{"t":"Space"},{"t":"Str","c":"of"},{"t":"Space"},{"t":"Str","c":"an"},{"t":"Space"},{"t":"Str","c":"allocatable"},{"t":"Space"},{"t":"Str","c":"entity"}]},{"t":"Header","c":[3,["",[],[]],[{"t":"Strong","c":[{"t":"Str","c":"Synopsis"}]}]]},{"t":"CodeBlock","c":[["",["fortran"],[]],"    result = allocated(array|scalar)\n"]},{"t":"CodeBlock","c":[["",["fortran"],[]],"     logical function allocated(array,scalar)\n\n      type(TYPE(kind=**)),allocatable,optional :: array(..)\n      type(TYPE(kind=**)),allocatable,optional :: scalar\n"]},{"t":"Header","c":[3,["",[],[]],[{"t":"Strong","c":[{"t":"Str","c":"Characteristics"}]}]]},{"t":"BulletList","c":[[{"t":"Plain","c":[{"t":"Str","c":"a"},{"t":"Space"},{"t":"Str","c":"kind"},{"t":"Space"},{"t":"Str","c":"designated"},{"t":"Space"},{"t":"Str","c":"as"},{"t":"Space"},{"t":"Str","c":"**"},{"t":"Space"},{"t":"Str","c":"may"},{"t":"Space"},{"t":"Str","c":"be"},{"t":"Space"},{"t":"Str","c":"any"},{"t":"Space"},{"t":"Str","c":"supported"},{"t":"Space"},{"t":"Str","c":"kind"},{"t":"Space"},{"t":"Str","c":"for"},{"t":"Space"},{"t":"Str","c":"the"},{"t":"Space"},{"t":"Str","c":"type"}]}],[{"t":"Plain","c":[{"t":"Strong","c":[{"t":"Str","c":"array"}]},{"t":"Space"},{"t":"Str","c":"may"},{"t":"Space"},{"t":"Str","c":"be"},{"t":"Space"},{"t":"Str","c":"any"},{"t":"Space"},{"t":"Str","c":"allocatable"},{"t":"Space"},{"t":"Str","c":"array"},{"t":"Space"},{"t":"Str","c":"object"},{"t":"Space"},{"t":"Str","c":"of"},{"t":"Space"},{"t":"Str","c":"any"},{"t":"Space"},{"t":"Str","c":"type."}]}],[{"t":"Plain","c":[{"t":"Strong","c":[{"t":"Str","c":"scalar"}]},{"t":"Space"},{"t":"Str","c":"may"},{"t":"Space"},{"t":"Str","c":"be"},{"t":"Space"},{"t":"Str","c":"any"},{"t":"Space"},{"t":"Str","c":"allocatable"},{"t":"Space"},{"t":"Str","c":"scalar"},{"t":"Space"},{"t":"Str","c":"of"},{"t":"Space"},{"t":"Str","c":"any"},{"t":"Space"},{"t":"Str","c":"type."}]}],[{"t":"Plain","c":[{"t":"Str","c":"the"},{"t":"Space"},{"t":"Str","c":"result"},{"t":"Space"},{"t":"Str","c":"is"},{"t":"Space"},{"t":"Str","c":"a"},{"t":"Space"},{"t":"Str","c":"default"},{"t":"Space"},{"t":"Str","c":"logical"},{"t":"Space"},{"t":"Str","c":"scalar"}]}]]},{"t":"Header","c":[3,["",[],[]],[{"t":"Strong","c":[{"t":"Str","c":"Description"}]}]]},{"t":"Para","c":[{"t":"Strong","c":[{"t":"Str","c":"allocated"}]},{"t":"Str","c":"(3)"},{"t":"Space"},{"t":"Str","c":"checks"},{"t":"Space"},{"t":"Str","c":"the"},{"t":"Space"},{"t":"Str","c":"allocation"},{"t":"Space"},{"t":"Str","c":"status"},{"t":"Space"},{"t":"Str","c":"of"},{"t":"Space"},{"t":"Str","c":"both"},{"t":"Space"},{"t":"Str","c":"arrays"},{"t":"SoftBreak"},{"t":"Str","c":"and"},{"t":"Space"},{"t":"Str","c":"scalars."}]},{"t":"Para","c":[{"t":"Str","c":"At"},{"t":"Space"},{"t":"Str","c":"least"},{"t":"Space"},{"t":"Str","c":"one"},{"t":"Space"},{"t":"Str","c":"and"},{"t":"Space"},{"t":"Str","c":"only"},{"t":"Space"},{"t":"Str","c":"one"},{"t":"Space"},{"t":"Str","c":"of"},{"t":"Space"},{"t":"Strong","c":[{"t":"Str","c":"array"}]},{"t":"Space"},{"t":"Str","c":"or"},{"t":"Space"},{"t":"Strong","c":[{"t":"Str","c":"scalar"}]},{"t":"Space"},{"t":"Str","c":"must"},{"t":"Space"},{"t":"Str","c":"be"},{"t":"Space"},{"t":"Str","c":"specified."}]},{"t":"Header","c":[3,["",[],[]],[{"t":"Strong","c":[{"t":"Str","c":"Options"}]}]]},{"t":"BulletList","c":[[{"t":"Plain","c":[{"t":"Strong","c":[{"t":"Str","c":"entity"}]},{"t":"SoftBreak"},{"t":"Str","c":":"},{"t":"Space"},{"t":"Str","c":"the"},{"t":"Space"},{"t":"Emph","c":[{"t":"Str","c":"allocatable"}]},{"t":"Space"},{"t":"Str","c":"object"},{"t":"Space"},{"t":"Str","c":"to"},{"t":"Space"},{"t":"Str","c":"test."}]}]]},{"t":"Header","c":[3,["",[],[]],[{"t":"Strong","c":[{"t":"Str","c":"Result"}]}]]},{"t":"Para","c":[{"t":"Str","c":"If"},{"t":"Space"},{"t":"Str","c":"the"},{"t":"Space"},{"t":"Str","c":"argument"},{"t":"Space"},{"t":"Str","c":"is"},{"t":"Space"},{"t":"Str","c":"allocated"},{"t":"Space"},{"t":"Str","c":"then"},{"t":"Space"},{"t":"Str","c":"the"},{"t":"Space"},{"t":"Str","c":"result"},{"t":"Space"},{"t":"Str","c":"is"},{"t":"Space"},{"t":"Emph","c":[{"t":"Str","c":".true."}]},{"t":"Str","c":";"},{"t":"Space"},{"t":"Str","c":"otherwise,"},{"t":"SoftBreak"},{"t":"Str","c":"it"},{"t":"Space"},{"t":"Str","c":"returns"},{"t":"Space"},{"t":"Emph","c":[{"t":"Str","c":".false."}]},{"t":"Str","c":"."}]},{"t":"Header","c":[3,["",[],[]],[{"t":"Strong","c":[{"t":"Str","c":"Examples"}]}]]},{"t":"Para","c":[{"t":"Str","c":"Sample"},{"t":"Space"},{"t":"Str","c":"program:"}]},{"t":"CodeBlock","c":[["",["fortran"],[]],"program demo_allocated\nuse,intrinsic :: iso_fortran_env, only : dp=>real64,sp=>real32\nimplicit none\nreal(kind=sp), allocatable :: x(:)\ncharacter(len=256) :: message\ninteger :: istat\n  ! basics\n   if( allocated(x)) then\n       write(*,*)'do things if allocated'\n   else\n       write(*,*)'do things if not allocated'\n   endif\n\n   ! if already allocated, deallocate\n   if ( allocated(x) ) deallocate(x,STAT=istat, ERRMSG=message )\n   if(istat.ne.0)then\n      write(*,*)trim(message)\n      stop\n   endif\n\n   ! only if not allocated, allocate\n   if ( .not. allocated(x) ) allocate(x(20))\n\n  ! allocation and intent(out)\n   call intentout(x)\n   write(*,*)'note it is deallocated!',allocated(x)\n\n   contains\n\n   subroutine intentout(arr)\n   ! note that if arr has intent(out) and is allocatable,\n   ! arr is deallocated on entry\n   real(kind=sp),intent(out),allocatable :: arr(:)\n       write(*,*)'note it was allocated in calling program',allocated(arr)\n   end subroutine intentout\n\nend program demo_allocated\n"]},{"t":"Para","c":[{"t":"Str","c":"Results:"}]},{"t":"CodeBlock","c":[["",["text"],[]]," >  do things if not allocated\n >  note it was allocated in calling program F\n >  note it is deallocated! F\n"]},{"t":"Header","c":[3,["",[],[]],[{"t":"Strong","c":[{"t":"Str","c":"Standard"}]}]]},{"t":"Para","c":[{"t":"Str","c":"Fortran"},{"t":"Space"},{"t":"Str","c":"95."},{"t":"Space"},{"t":"Str","c":"allocatable"},{"t":"Space"},{"t":"Str","c":"scalar"},{"t":"Space"},{"t":"Str","c":"entities"},{"t":"Space"},{"t":"Str","c":"were"},{"t":"Space"},{"t":"Str","c":"added"},{"t":"Space"},{"t":"Str","c":"in"},{"t":"Space"},{"t":"Str","c":"Fortran"},{"t":"Space"},{"t":"Str","c":"2003."}]},{"t":"Header","c":[3,["",[],[]],[{"t":"Strong","c":[{"t":"Str","c":"See"},{"t":"Space"},{"t":"Str","c":"Also"}]}]]},{"t":"Para","c":[{"t":"Link","c":[["",[],[]],[{"t":"Strong","c":[{"t":"Str","c":"move_alloc"}]},{"t":"Str","c":"(3)"}],["#move_alloc",""]]}]},{"t":"Para","c":[{"t":"Emph","c":[{"t":"Str","c":"fortran-lang"},{"t":"Space"},{"t":"Str","c":"intrinsic"},{"t":"Space"},{"t":"Str","c":"descriptions"},{"t":"Space"},{"t":"Str","c":"(license:"},{"t":"Space"},{"t":"Str","c":"MIT)"},{"t":"Space"},{"t":"Str","c":"@urbanjost"}]}]}],"pandoc-api-version":[1,17,5,4],"meta":{}}
