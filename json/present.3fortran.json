{"blocks":[{"t":"Header","c":[3,["",[],[]],[{"t":"Strong","c":[{"t":"Str","c":"Name"}]}]]},{"t":"Para","c":[{"t":"Strong","c":[{"t":"Str","c":"present"}]},{"t":"Str","c":"(3)"},{"t":"Space"},{"t":"Str","c":"-"},{"t":"Space"},{"t":"Str","c":"[STATE:INQUIRY]"},{"t":"Space"},{"t":"Str","c":"Determine"},{"t":"Space"},{"t":"Str","c":"whether"},{"t":"Space"},{"t":"Str","c":"an"},{"t":"Space"},{"t":"Str","c":"optional"},{"t":"Space"},{"t":"Str","c":"dummy"},{"t":"Space"},{"t":"Str","c":"argument"},{"t":"SoftBreak"},{"t":"Str","c":"is"},{"t":"Space"},{"t":"Str","c":"specified"}]},{"t":"Header","c":[3,["",[],[]],[{"t":"Strong","c":[{"t":"Str","c":"Synopsis"}]}]]},{"t":"CodeBlock","c":[["",["fortran"],[]],"    result = present(a)\n"]},{"t":"CodeBlock","c":[["",["fortran"],[]],"     logical function present (a)\n\n      type(TYPE(kind=KIND)) :: a(..)\n"]},{"t":"Header","c":[3,["",[],[]],[{"t":"Strong","c":[{"t":"Str","c":"Characteristics"}]}]]},{"t":"BulletList","c":[[{"t":"Plain","c":[{"t":"Strong","c":[{"t":"Str","c":"a"}]},{"t":"Space"},{"t":"Str","c":"May"},{"t":"Space"},{"t":"Str","c":"be"},{"t":"Space"},{"t":"Str","c":"of"},{"t":"Space"},{"t":"Str","c":"any"},{"t":"Space"},{"t":"Str","c":"type"},{"t":"Space"},{"t":"Str","c":"and"},{"t":"Space"},{"t":"Str","c":"may"},{"t":"Space"},{"t":"Str","c":"be"},{"t":"Space"},{"t":"Str","c":"a"},{"t":"Space"},{"t":"Str","c":"pointer,"},{"t":"Space"},{"t":"Str","c":"scalar"},{"t":"Space"},{"t":"Str","c":"or"},{"t":"Space"},{"t":"Str","c":"array"},{"t":"Space"},{"t":"Str","c":"value,"},{"t":"SoftBreak"},{"t":"Str","c":"or"},{"t":"Space"},{"t":"Str","c":"a"},{"t":"Space"},{"t":"Str","c":"dummy"},{"t":"Space"},{"t":"Str","c":"procedure."}]}]]},{"t":"Header","c":[3,["",[],[]],[{"t":"Strong","c":[{"t":"Str","c":"Description"}]}]]},{"t":"Para","c":[{"t":"Strong","c":[{"t":"Str","c":"present"}]},{"t":"Str","c":"(3)"},{"t":"Space"},{"t":"Str","c":"can"},{"t":"Space"},{"t":"Str","c":"be"},{"t":"Space"},{"t":"Str","c":"used"},{"t":"Space"},{"t":"Str","c":"in"},{"t":"Space"},{"t":"Str","c":"a"},{"t":"Space"},{"t":"Str","c":"procedure"},{"t":"Space"},{"t":"Str","c":"to"},{"t":"Space"},{"t":"Str","c":"determine"},{"t":"Space"},{"t":"Str","c":"if"},{"t":"Space"},{"t":"Str","c":"an"},{"t":"Space"},{"t":"Str","c":"optional"},{"t":"SoftBreak"},{"t":"Str","c":"dummy"},{"t":"Space"},{"t":"Str","c":"argument"},{"t":"Space"},{"t":"Str","c":"was"},{"t":"Space"},{"t":"Str","c":"present"},{"t":"Space"},{"t":"Str","c":"on"},{"t":"Space"},{"t":"Str","c":"the"},{"t":"Space"},{"t":"Str","c":"current"},{"t":"Space"},{"t":"Str","c":"call"},{"t":"Space"},{"t":"Str","c":"to"},{"t":"Space"},{"t":"Str","c":"the"},{"t":"Space"},{"t":"Str","c":"procedure."}]},{"t":"Para","c":[{"t":"Strong","c":[{"t":"Str","c":"a"}]},{"t":"Space"},{"t":"Str","c":"shall"},{"t":"Space"},{"t":"Str","c":"be"},{"t":"Space"},{"t":"Str","c":"the"},{"t":"Space"},{"t":"Str","c":"name"},{"t":"Space"},{"t":"Str","c":"of"},{"t":"Space"},{"t":"Str","c":"an"},{"t":"Space"},{"t":"Str","c":"optional"},{"t":"Space"},{"t":"Str","c":"dummy"},{"t":"Space"},{"t":"Str","c":"argument"},{"t":"Space"},{"t":"Str","c":"that"},{"t":"Space"},{"t":"Str","c":"is"},{"t":"Space"},{"t":"Str","c":"accessible"},{"t":"SoftBreak"},{"t":"Str","c":"in"},{"t":"Space"},{"t":"Str","c":"the"},{"t":"Space"},{"t":"Str","c":"subprogram"},{"t":"Space"},{"t":"Str","c":"in"},{"t":"Space"},{"t":"Str","c":"which"},{"t":"Space"},{"t":"Str","c":"the"},{"t":"Space"},{"t":"Strong","c":[{"t":"Str","c":"present"}]},{"t":"Str","c":"(3)"},{"t":"Space"},{"t":"Str","c":"function"},{"t":"Space"},{"t":"Str","c":"reference"},{"t":"SoftBreak"},{"t":"Str","c":"appears."},{"t":"Space"},{"t":"Str","c":"There"},{"t":"Space"},{"t":"Str","c":"are"},{"t":"Space"},{"t":"Str","c":"no"},{"t":"Space"},{"t":"Str","c":"other"},{"t":"Space"},{"t":"Str","c":"requirements"},{"t":"Space"},{"t":"Str","c":"on"},{"t":"Space"},{"t":"Strong","c":[{"t":"Str","c":"a"}]},{"t":"Str","c":"."}]},{"t":"Para","c":[{"t":"Str","c":"Note"},{"t":"Space"},{"t":"Str","c":"when"},{"t":"Space"},{"t":"Str","c":"an"},{"t":"Space"},{"t":"Str","c":"argument"},{"t":"Space"},{"t":"Str","c":"is"},{"t":"Space"},{"t":"Str","c":"not"},{"t":"Space"},{"t":"Str","c":"present"},{"t":"Space"},{"t":"Str","c":"when"},{"t":"Space"},{"t":"Str","c":"the"},{"t":"Space"},{"t":"Str","c":"current"},{"t":"Space"},{"t":"Str","c":"procedure"},{"t":"Space"},{"t":"Str","c":"is"},{"t":"SoftBreak"},{"t":"Str","c":"invoked,"},{"t":"Space"},{"t":"Str","c":"you"},{"t":"Space"},{"t":"Str","c":"may"},{"t":"Space"},{"t":"Str","c":"only"},{"t":"Space"},{"t":"Str","c":"pass"},{"t":"Space"},{"t":"Str","c":"it"},{"t":"Space"},{"t":"Str","c":"as"},{"t":"Space"},{"t":"Str","c":"an"},{"t":"Space"},{"t":"Str","c":"optional"},{"t":"Space"},{"t":"Str","c":"argument"},{"t":"Space"},{"t":"Str","c":"to"},{"t":"Space"},{"t":"Str","c":"another"},{"t":"SoftBreak"},{"t":"Str","c":"procedure"},{"t":"Space"},{"t":"Str","c":"or"},{"t":"Space"},{"t":"Str","c":"pass"},{"t":"Space"},{"t":"Str","c":"it"},{"t":"Space"},{"t":"Str","c":"as"},{"t":"Space"},{"t":"Str","c":"an"},{"t":"Space"},{"t":"Str","c":"argument"},{"t":"Space"},{"t":"Str","c":"to"},{"t":"Space"},{"t":"Strong","c":[{"t":"Str","c":"present"}]},{"t":"Str","c":"."}]},{"t":"Header","c":[3,["",[],[]],[{"t":"Strong","c":[{"t":"Str","c":"Options"}]}]]},{"t":"BulletList","c":[[{"t":"Plain","c":[{"t":"Strong","c":[{"t":"Str","c":"a"}]},{"t":"SoftBreak"},{"t":"Str","c":":"},{"t":"Space"},{"t":"Str","c":"the"},{"t":"Space"},{"t":"Str","c":"name"},{"t":"Space"},{"t":"Str","c":"of"},{"t":"Space"},{"t":"Str","c":"an"},{"t":"Space"},{"t":"Str","c":"optional"},{"t":"Space"},{"t":"Str","c":"dummy"},{"t":"Space"},{"t":"Str","c":"argument"},{"t":"Space"},{"t":"Str","c":"accessible"},{"t":"Space"},{"t":"Str","c":"within"},{"t":"Space"},{"t":"Str","c":"the"},{"t":"Space"},{"t":"Str","c":"current"},{"t":"SoftBreak"},{"t":"Str","c":"subroutine"},{"t":"Space"},{"t":"Str","c":"or"},{"t":"Space"},{"t":"Str","c":"function."}]}]]},{"t":"Header","c":[3,["",[],[]],[{"t":"Strong","c":[{"t":"Str","c":"Result"}]}]]},{"t":"Para","c":[{"t":"Str","c":"Returns"},{"t":"Space"},{"t":"Emph","c":[{"t":"Str","c":".true."}]},{"t":"Space"},{"t":"Str","c":"if"},{"t":"Space"},{"t":"Str","c":"the"},{"t":"Space"},{"t":"Str","c":"optional"},{"t":"Space"},{"t":"Str","c":"argument"},{"t":"Space"},{"t":"Strong","c":[{"t":"Str","c":"a"}]},{"t":"Space"},{"t":"Str","c":"is"},{"t":"Space"},{"t":"Str","c":"present"},{"t":"Space"},{"t":"Str","c":"(was"},{"t":"Space"},{"t":"Str","c":"passed"},{"t":"SoftBreak"},{"t":"Str","c":"on"},{"t":"Space"},{"t":"Str","c":"the"},{"t":"Space"},{"t":"Str","c":"call"},{"t":"Space"},{"t":"Str","c":"to"},{"t":"Space"},{"t":"Str","c":"the"},{"t":"Space"},{"t":"Str","c":"procedure)"},{"t":"Space"},{"t":"Str","c":","},{"t":"Space"},{"t":"Str","c":"or"},{"t":"Space"},{"t":"Emph","c":[{"t":"Str","c":".false."}]},{"t":"Space"},{"t":"Str","c":"otherwise."}]},{"t":"Header","c":[3,["",[],[]],[{"t":"Strong","c":[{"t":"Str","c":"Examples"}]}]]},{"t":"Para","c":[{"t":"Str","c":"Sample"},{"t":"Space"},{"t":"Str","c":"program:"}]},{"t":"CodeBlock","c":[["",["fortran"],[]],"program demo_present\nimplicit none\ninteger :: answer\n   ! argument to func() is not present\n   answer=func()\n   write(*,*) answer\n   ! argument to func() is present\n   answer=func(1492)\n   write(*,*) answer\ncontains\n!\ninteger function func(x)\n! the optional characteristic on this definition allows this variable\n! to not be specified on a call; and also allows it to subsequently\n! be passed to PRESENT(3):\ninteger, intent(in), optional :: x\ninteger :: x_local\n   !\n   ! basic\n   if(present(x))then\n     ! if present, you can use x like any other variable.\n     x_local=x\n   else\n     ! if not, you cannot define or reference x except to\n     ! pass it as an optional parameter to another procedure\n     ! or in a call to present(3f)\n     x_local=0\n   endif\n   !\n   func=x_local**2\n   !\n   ! passing the argument on to other procedures\n   ! so something like this is a bad idea because x is used\n   ! as the first argument to merge(3f) when it might not be\n   ! present\n   ! xlocal=merge(x,0,present(x)) ! NO!!\n   !\n   ! We can pass it to another procedure if another\n   ! procedure declares the argument as optional as well,\n   ! or we have tested that X is present\n   call tattle('optional argument x',x)\n   if(present(x))call not_optional(x)\nend function\n!\nsubroutine tattle(label,arg)\ncharacter(len=*),intent(in) :: label\ninteger,intent(in),optional :: arg\n   if(present(arg))then\n      write(*,*)label,' is present'\n   else\n      write(*,*)label,' is not present'\n   endif\nend subroutine tattle\n!\nsubroutine not_optional(arg)\ninteger,intent(in) :: arg\n   write(*,*)'already tested X is defined',arg\nend subroutine not_optional\n!\nend program demo_present\n"]},{"t":"Para","c":[{"t":"Str","c":"Results:"}]},{"t":"CodeBlock","c":[["",["text"],[]],"    optional argument x is not present\n              0\n    optional argument x is present\n    already tested X is defined 1492\n        2226064\n"]},{"t":"Header","c":[3,["",[],[]],[{"t":"Strong","c":[{"t":"Str","c":"Standard"}]}]]},{"t":"Para","c":[{"t":"Str","c":"Fortran"},{"t":"Space"},{"t":"Str","c":"95"}]},{"t":"Para","c":[{"t":"Emph","c":[{"t":"Str","c":"fortran-lang"},{"t":"Space"},{"t":"Str","c":"intrinsic"},{"t":"Space"},{"t":"Str","c":"descriptions"},{"t":"Space"},{"t":"Str","c":"(license:"},{"t":"Space"},{"t":"Str","c":"MIT)"},{"t":"Space"},{"t":"Str","c":"@urbanjost"}]}]}],"pandoc-api-version":[1,17,5,4],"meta":{}}
