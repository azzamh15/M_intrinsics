NAME

BGT(3) - [BIT:COMPARE] Bitwise greater than

SYNTAX

        elemental function bgt(i, j)

         integer(kind=KIND),intent(in) :: i
         integer(kind=KIND),intent(in) :: j
         logical :: bgt

where the kind of I and J may be of any supported kind. An exception is
that one value may be a BOZ constant with a value valid for the kind of
the integer value.

DESCRIPTION

Determines whether an integer is bitwise greater than another. Bit-level
representations of values are platform-dependent.

ARGUMENTS

-   I : Shall be of integer type or a BOZ literal constant.

-   J : Shall be of integer type or a BOZ literal constant.

RETURNS

The return value is of type logical and of the default kind. The result
is true if the sequence of bits represented by i is greater than the
sequence of bits represented by j, otherwise the result is false.

EXAMPLES

Sample program:

    program demo_bgt
    use,intrinsic :: iso_fortran_env, only : int8, int16, int32, int64
    implicit none
    integer            :: i
    integer(kind=int8) :: byte
      ! Compare some one-byte values to 64.
       ! Notice that the values are tested as bits not as integers
       ! so sign bits in the integer are treated just like any other
       do i=-128,127,32
          byte=i
          write(*,'(sp,i0.4,*(1x,1l,1x,b0.8))')i,bgt(byte,64_int8),byte
       enddo

       ! see the BGE() description for an extended example

    end program demo_bgt

Results:

       > -0128  T 10000000
       > -0096  T 10100000
       > -0064  T 11000000
       > -0032  T 11100000
       > +0000  F 00000000
       > +0032  F 00100000
       > +0064  F 01000000
       > +0096  T 01100000

STANDARD

Fortran 2008 and later

SEE ALSO

BGE(3), BLE(3), BLT(3)

fortran-lang intrinsic descriptions
