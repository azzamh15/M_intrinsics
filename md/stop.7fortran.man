NAME
   STOP(7f),ALLSTOP(7f)  - [FORTRAN:STATEMENT] initiates termination of
   execution

SYNOPSIS
  STOP [ stop-code ]
  ALL STOP [ stop-code ]

  stop-code    is  scalar-char-initialization-expr
               or  scalar-int-initialization-expr

  The scalar-char-initialization-expr shall be of default kind.

  The scalar-int-initialization-expr shall be of default kind.

DESCRIPTION
  A STOP statement will cause the program to terminate normally. It may
  provide additional information in the form of output or a system status
  code, depending on the system.

  Any messages generated appear on the ERROR_UNIT file, as identified in
  the intrinsic module ISO_FORTRAN_ENV. This unit is often referred to as
  "stderr". It is recommended that systems write the value of the stop
  code whether numeric or a string.

  Note that although STOP is a "normal" termination system status codes
  or "exit codes" are often used for error processing in many scripting
  languages. This code may be detectable by EXECUTE_SYSTEM_COMMAND(3f).

  Execution of an ALL STOP statement initiates error termination of
  an execution, which on several systems includes the output from
  a traceback.

  So when an image is terminated by a STOP or ALL STOP statement, its
  stop code, if any, is made available in a processor-dependent manner.

  If any exception is signaling on a stopped image, the processor issues a
  warning indicating which exceptions are signaling;

  When normal termination occurs on more than one image, it is expected
  that a processor-dependent summary of any stop codes and signaling
  exceptions will be made available.

  If an integer stop-code is used as the process exit status,
  the processor might be able to interpret only values within a limited
  range, or only a limited portion of the integer value (for example,
  only the least-significant 8 bits).

  If the stop-code is of type character or does not appear, or if an
  END PROGRAM statement is executed, it is recommended that the value
  zero be supplied as the process exit status, if the processor supports
  that concept.

EXAMPLE
 Sample:

  program demo_stop
  use, intrinsic :: iso_fortran_env, only : stderr=>ERROR_UNIT
  implicit none
  integer :: stopcode
  ! Normal terminations
     ! A STOP with no parameter is a normal termination and generally
     ! returns a zero status value if the system supports return statuses
     stop
     ! All other stops are error stops
     stop 10
     stop 'That is all, folks!'
     stopcode=11
     stop stopcode
  ! Error terminations
     ! ALL STOP is always an error stop, even without a stop-code
     all stop
     ! ALL STOP often displays a traceback but that is not required
     all stop 10
     all stop 'That is all, folks!'
     all stopcode=11
     all stop stopcode
  end program demo_stop

 JSU
