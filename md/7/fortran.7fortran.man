NAME
   fortran(7f) - [FORTRAN] Fortran Example
   (LICENSE:PD)
SYNOPSIS
DESCRIPTION

abs (3fortran)       - [FORTRAN:INTRINSIC:NUMERIC] Absolute value
achar (3fortran)     - [FORTRAN:INTRINSIC:CHARACTER] returns a character in a specified position in the ASCII collating sequence
acos (3fortran)      - [FORTRAN:INTRINSIC:TRIGONOMETRIC] Arccosine function
acosh (3fortran)     - [FORTRAN:INTRINSIC:TRIGONOMETRIC] Inverse hyperbolic cosine function
adjustl (3fortran)   - [FORTRAN:INTRINSIC:CHARACTER] Left adjust a string
adjustr (3fortran)   - [FORTRAN:INTRINSIC:CHARACTER] Right adjust a string
aimag (3fortran)     - [FORTRAN:INTRINSIC:NUMERIC] Imaginary part of complex number
aint (3fortran)      - [FORTRAN:INTRINSIC:NUMERIC] Truncate to a whole number
all (3fortran)       - [FORTRAN:INTRINSIC:ARRAY REDUCTION] determines if all the values are true
allocated (3fortran) - [FORTRAN:INTRINSIC:ARRAY INQUIRY] Status of an allocatable entity
anint (3fortran)     - [FORTRAN:INTRINSIC:NUMERIC] Nearest whole number
any (3fortran)       - [FORTRAN:INTRINSIC:ARRAY REDUCTION] determines if any of the values in the logical array are true.
asin (3fortran)      - [FORTRAN:INTRINSIC:TRIGONOMETRIC] Arcsine function
asinh (3fortran)     - [FORTRAN:INTRINSIC:TRIGONOMETRIC] Inverse hyperbolic sine function
atan (3fortran)      - [FORTRAN:INTRINSIC:TRIGONOMETRIC] Arctangent function
atan2 (3fortran)     - [FORTRAN:INTRINSIC:TRIGONOMETRIC] Arctangent function
atanh (3fortran)     - [FORTRAN:INTRINSIC:TRIGONOMETRIC] Inverse hyperbolic tangent function
associated (3fortran) - [FORTRAN:INTRINSIC] Status of a pointer or pointer/target pair
atomic_add (3fortran) - [FORTRAN:INTRINSIC] Atomic ADD operation
atomic_and (3fortran) - [FORTRAN:INTRINSIC:ATOMIC:BIT MANIPULATION] Atomic bitwise AND operation
atomic_cas (3fortran) - [FORTRAN:INTRINSIC] Atomic compare and swap
atomic_define (3fortran) - [FORTRAN:INTRINSIC] Setting a variable atomically
atomic_fetch_add (3fortran) - [FORTRAN:INTRINSIC] Atomic ADD operation with prior fetch
atomic_fetch_and (3fortran) - [FORTRAN:INTRINSIC:ATOMIC:BIT MANIPULATION] Atomic bitwise AND operation with prior fetch
atomic_fetch_or (3fortran) - [FORTRAN:INTRINSIC:ATOMIC:BIT MANIPULATION] Atomic bitwise OR operation with prior fetch
atomic_fetch_xor (3fortran) - [FORTRAN:INTRINSIC:ATOMIC:BIT MANIPULATION] Atomic bitwise XOR operation with prior fetch
atomic_or (3fortran) - [FORTRAN:INTRINSIC:ATOMIC:BIT MANIPULATION] Atomic bitwise OR operation
atomic_ref (3fortran) - [FORTRAN:INTRINSIC] Obtaining the value of a variable atomically
atomic_xor (3fortran) - [FORTRAN:INTRINSIC:ATOMIC:BIT MANIPULATION] Atomic bitwise OR operation
bessel_j0 (3fortran) - [FORTRAN:INTRINSIC:MATHEMATICS] Bessel function of the first kind of order 0
bessel_j1 (3fortran) - [FORTRAN:INTRINSIC:MATHEMATICS] Bessel function of the first kind of order 1
bessel_jn (3fortran) - [FORTRAN:INTRINSIC:MATHEMATICS] Bessel function of the first kind
bessel_y0 (3fortran) - [FORTRAN:INTRINSIC:MATHEMATICS] Bessel function of the second kind of order 0
bessel_y1 (3fortran) - [FORTRAN:INTRINSIC:MATHEMATICS] Bessel function of the second kind of order 1
bessel_yn (3fortran) - [FORTRAN:INTRINSIC:MATHEMATICS] Bessel function of the second kind
bge (3fortran)       - [FORTRAN:INTRINSIC:BIT COMPARE] Bitwise greater than or equal to
bgt (3fortran)       - [FORTRAN:INTRINSIC:BIT COMPARE] Bitwise greater than
bit_size (3fortran)  - [FORTRAN:INTRINSIC:BIT INQUIRY] Bit size inquiry function
ble (3fortran)       - [FORTRAN:INTRINSIC:BIT COMPARE] Bitwise less than or equal to
blt (3fortran)       - [FORTRAN:INTRINSIC:BIT COMPARE] Bitwise less than
btest (3fortran)     - [FORTRAN:INTRINSIC:BIT MANIPULATION] Bit test function
c_associated (3fortran) - [FORTRAN:INTRINSIC:ISO_C_BINDING] Status of a C pointer
c_f_pointer (3fortran) - [FORTRAN:INTRINSIC:ISO_C_BINDING] Convert C into Fortran pointer
c_f_procpointer (3fortran) - [FORTRAN:INTRINSIC:ISO_C_BINDING] Convert C into Fortran procedure pointer
c_funloc (3fortran)  - [FORTRAN:INTRINSIC:ISO_C_BINDING] Obtain the C address of a procedure
c_loc (3fortran)     - [FORTRAN:INTRINSIC:ISO_C_BINDING] Obtain the C address of an object
c_sizeof (3fortran)  - [FORTRAN:INTRINSIC:ISO_C_BINDING] Size in bytes of an expression
ceiling (3fortran)   - [FORTRAN:INTRINSIC:NUMERIC] Integer ceiling function
char (3fortran)      - [FORTRAN:INTRINSIC:CHARACTER] Character conversion function
cmplx (3fortran)     - [FORTRAN:INTRINSIC:NUMERIC] Complex conversion function
co_broadcast (3fortran) - [FORTRAN:INTRINSIC:COLLECTIVE] Copy a value to all images the current set of images
co_lbound (3fortran) - [FORTRAN:INTRINSIC:COLLECTIVE] Lower codimension bounds of an array
co_max (3fortran)    - [FORTRAN:INTRINSIC:COLLECTIVE] Maximal value on the current set of images
co_min (3fortran)    - [FORTRAN:INTRINSIC:COLLECTIVE] Minimal value on the current set of images
co_reduce (3fortran) - [FORTRAN:INTRINSIC:COLLECTIVE] Reduction of values on the current set of images
co_sum (3fortran)    - [FORTRAN:INTRINSIC:COLLECTIVE] Sum of values on the current set of images
co_ubound (3fortran) - [FORTRAN:INTRINSIC:COLLECTIVE] Upper codimension bounds of an array
command_argument_count (3fortran) - [FORTRAN:INTRINSIC:SYSTEM ENVIRONMENT] Get number of command line arguments
compiler_options (3fortran) - [FORTRAN:INTRINSIC] Options passed to the compiler
compiler_version (3fortran) - [FORTRAN:INTRINSIC] Compiler version string
conjg (3fortran)     - [FORTRAN:INTRINSIC:NUMERIC] Complex conjugate function
cos (3fortran)       - [FORTRAN:INTRINSIC:TRIGONOMETRIC] Cosine function
cosh (3fortran)      - [FORTRAN:INTRINSIC:TRIGONOMETRIC] Hyperbolic cosine function
count (3fortran)     - [FORTRAN:INTRINSIC:ARRAY REDUCTION] Count function
cpu_time (3fortran)  - [FORTRAN:INTRINSIC:SYSTEM ENVIRONMENT] return CPU processor time in seconds
cshift (3fortran)    - [FORTRAN:INTRINSIC:TRANSFORMATIONAL FUNCTION] Circular shift elements of an array
date_and_time (3fortran) - [FORTRAN:INTRINSIC:SYSTEM ENVIRONMENT] gets current time
dble (3fortran)      - [FORTRAN:INTRINSIC:NUMERIC] Double conversion function
digits (3fortran)    - [FORTRAN:INTRINSIC] Significant digits function
dim (3fortran)       - [FORTRAN:INTRINSIC:NUMERIC] Positive difference
dot_product (3fortran) - [FORTRAN:INTRINSIC:TRANSFORMATIONAL FUNCTION] Dot product function
dprod (3fortran)     - [FORTRAN:INTRINSIC:NUMERIC] Double product function
dshiftl (3fortran)   - [FORTRAN:INTRINSIC:BIT MANIPULATION] combines bits of arguments I and J
dshiftr (3fortran)   - [FORTRAN:INTRINSIC:BIT MANIPULATION] combines bits of arguments I and J
eoshift (3fortran)   - [FORTRAN:INTRINSIC:TRANSFORMATIONAL FUNCTION] End-off shift elements of an array
epsilon (3fortran)   - [FORTRAN:INTRINSIC] Epsilon function
erf (3fortran)       - [FORTRAN:INTRINSIC:MATHEMATICS] Error function
erfc (3fortran)      - [FORTRAN:INTRINSIC:MATHEMATICS] Complementary error function
erfc_scaled (3fortran) - [FORTRAN:INTRINSIC:MATHEMATICS] Error function
event_query (3fortran) - [FORTRAN:INTRINSIC] Query whether a coarray event has occurred
execute_command_line (3fortran) - [FORTRAN:INTRINSIC:SYSTEM ENVIRONMENT] Execute a shell command
exp (3fortran)       - [FORTRAN:INTRINSIC:MATHEMATICS] Exponential function
exponent (3fortran)  - [FORTRAN:INTRINSIC:MODEL_COMPONENTS] Exponent function
extends_type_of (3fortran) - [FORTRAN:INTRINSIC] True if and only if the dynamic type of A is an extension of the dynamic type of...
findloc (3fortran)   - [FORTRAN:INTRINSIC] Location of the first element of ARRAY identified by MASK along dimension DIM having a...
float (3fortran)     - [FORTRAN:INTRINSIC] Convert integer to default real
floor (3fortran)     - [FORTRAN:INTRINSIC:NUMERIC] Integer floor function
format (3fortran)    - [FORTRAN:INTRINSIC:I/O] Format statement
fraction (3fortran)  - [FORTRAN:INTRINSIC:MODEL_COMPONENTS] Fractional part of the model representation
gamma (3fortran)     - [FORTRAN:INTRINSIC:MATHEMATICS] Gamma function
get_command (3fortran) - [FORTRAN:INTRINSIC:SYSTEM ENVIRONMENT] Get the entire command line
get_command_argument (3fortran) - [FORTRAN:INTRINSIC:SYSTEM ENVIRONMENT] Get command line arguments
get_environment_variable (3fortran) - [FORTRAN:INTRINSIC:SYSTEM ENVIRONMENT] Get an environmental variable
huge (3fortran)      - [FORTRAN:INTRINSIC] Largest number of a kind
hypot (3fortran)     - [FORTRAN:INTRINSIC:MATHEMATICS] Euclidean distance function
iachar (3fortran)    - [FORTRAN:INTRINSIC:CHARACTER] Code in ASCII collating sequence
iall (3fortran)      - [FORTRAN:INTRINSIC:BIT MANIPULATION] Bitwise and of array elements
iand (3fortran)      - [FORTRAN:INTRINSIC:BIT MANIPULATION] Bitwise logical and
iany (3fortran)      - [FORTRAN:INTRINSIC:BIT MANIPULATION] Bitwise or of array elements
ibclr (3fortran)     - [FORTRAN:INTRINSIC:BIT MANIPULATION] Clear bit
ibits (3fortran)     - [FORTRAN:INTRINSIC:BIT MANIPULATION] Bit extraction
ibset (3fortran)     - [FORTRAN:INTRINSIC:BIT MANIPULATION] Set bit
ichar (3fortran)     - [FORTRAN:INTRINSIC:CHARACTER] Character-to-integer conversion function
ieor (3fortran)      - [FORTRAN:INTRINSIC:BIT MANIPULATION] Bitwise logical exclusive or
image_index (3fortran) - [FORTRAN:INTRINSIC] Cosubscript to image index conversion
index (3fortran)     - [FORTRAN:INTRINSIC:CHARACTER] Position of a substring within a string
int (3fortran)       - [FORTRAN:INTRINSIC:NUMERIC] Convert to integer type
ior (3fortran)       - [FORTRAN:INTRINSIC:BIT MANIPULATION] Bitwise logical inclusive or
iparity (3fortran)   - [FORTRAN:INTRINSIC:BIT MANIPULATION] Bitwise exclusive or of array elements
is_contiguous (3fortran) - [FORTRAN:INTRINSIC:ARRAY INQUIRY] test if object is contiguous
is_iostat_end (3fortran) - [FORTRAN:INTRINSIC] Test for end-of-file value
is_iostat_eor (3fortran) - [FORTRAN:INTRINSIC] Test for end-of-record value
ishft (3fortran)     - [FORTRAN:INTRINSIC:BIT MANIPULATION] Shift bits
ishftc (3fortran)    - [FORTRAN:INTRINSIC:BIT MANIPULATION] Shift bits circularly
kind (3fortran)      - [FORTRAN:INTRINSIC] Kind of an entity
kracken (3)          - [ARGUMENTS:M_kracken] crack command line options on Fortran programs, using "-KEYWORD VALUE" syntax
lbound (3fortran)    - [FORTRAN:INTRINSIC:ARRAY INQUIRY] Lower dimension bounds of an array
leadz (3fortran)     - [FORTRAN:INTRINSIC:BIT INQUIRY] Number of leading zero bits of an integer
len (3fortran)       - [FORTRAN:INTRINSIC:CHARACTER] Length of a character entity
len_trim (3fortran)  - [FORTRAN:INTRINSIC:CHARACTER] Length of a character entity without trailing blank characters
lge (3fortran)       - [FORTRAN:INTRINSIC:CHARACTER] Lexical greater than or equal
lgt (3fortran)       - [FORTRAN:INTRINSIC:CHARACTER] Lexical greater than
lle (3fortran)       - [FORTRAN:INTRINSIC:CHARACTER] Lexical less than or equal
llt (3fortran)       - [FORTRAN:INTRINSIC:CHARACTER] Lexical less than
log (3fortran)       - [FORTRAN:INTRINSIC:MATHEMATICS] Logarithm function
log10 (3fortran)     - [FORTRAN:INTRINSIC:MATHEMATICS] Base 10 logarithm function
log_gamma (3fortran) - [FORTRAN:INTRINSIC:MATHEMATICS] Logarithm of the Gamma function
logical (3fortran)   - [FORTRAN:INTRINSIC:BIT MANIPULATION] Bitwise logical and
maskl (3fortran)     - [FORTRAN:INTRINSIC] Left justified mask
maskr (3fortran)     - [FORTRAN:INTRINSIC] Right justified mask
matmul (3fortran)    - [FORTRAN:INTRINSIC:TRANSFORMATIONAL FUNCTION] matrix multiplication
max (3fortran)       - [FORTRAN:INTRINSIC:NUMERIC] Maximum value of an argument list
maxexponent (3fortran) - [FORTRAN:INTRINSIC] Maximum exponent of a real kind
maxloc (3fortran)    - [FORTRAN:INTRINSIC:ARRAY LOCATION] Location of the maximum value within an array
maxval (3fortran)    - [FORTRAN:INTRINSIC:ARRAY REDUCTION] determines the maximum value in an array or row
merge (3fortran)     - [FORTRAN:INTRINSIC:ARRAY CONSTRUCTION] Merge variables
merge_bits (3fortran) - [FORTRAN:INTRINSIC:BIT MANIPULATION] Merge of bits under mask
min (3fortran)       - [FORTRAN:INTRINSIC:NUMERIC] Minimum value of an argument list
minexponent (3fortran) - [FORTRAN:INTRINSIC] Minimum exponent of a real kind
minloc (3fortran)    - [FORTRAN:INTRINSIC:ARRAY LOCATION] Location of the minimum value within an array
minval (3fortran)    - [FORTRAN:INTRINSIC:ARRAY REDUCTION] Minimum value of an array
mod (3fortran)       - [FORTRAN:INTRINSIC:NUMERIC] Remainder function

associate (7fortran) - [FORTRAN:EXECUTION CONTROL] associate construct
allocate (7fortran)  - [FORTRAN] The ALLOCATE statement dynamically creates pointer targets and allocatable variables.
array_constructors (7fortran) - [FORTRAN] An array constructor can be used to create and assign values to rank-one arrays (and ar...
backspace (7fortran) - [FORTRAN:FILE_POSITIONING] - backspace one record on specified I/O unit
block (7fortran)     - [FORTRAN:EXECUTION CONTROL] construct
case (7fortran)      - [FORTRAN:EXECUTION CONTROL] select a block based on the value of an expression (a case)
continue (7fortran)  - [FORTRAN:EXECUTION CONTROL] construct
cycle (7fortran)     - [FORTRAN:EXECUTION CONTROL] construct
data (7fortran)      - [FORTRAN] DATA statement
deallocate (7fortran) - [FORTRAN:STATEMENT] causes allocated variables and targets to be deallocated
do (7fortran)        - [FORTRAN:EXECUTION CONTROL] construct
endselect (7fortran) - [FORTRAN:EXECUTION CONTROL] select a block based on the value of an expression (a case)
exit (7fortran)      - [FORTRAN:EXECUTION CONTROL] statement
flush (7fortran)     - [FORTRAN:IO] flush I/O buffers of specified files
fortran (7fortran)   - [FORTRAN] Fortran Example
fortran_continuation_line (7fortran) - [FORTRAN] Fortran Continuation Lines
fortran_recursion (7fortran) - [FORTRAN] Examples of recursion
free_source_form (7fortran) - [FORTRAN] syntax of free source form statements, comments, and continuation lines
if (7fortran)        - [FORTRAN:EXECUTION CONTROL] selects a block based on a sequence of logical expressions.
implicit (7fortran)  - [FORTRAN:STATEMENT] specify default type (if any) associated to a starting letter
implied_do (7fortran) - [FORTRAN] documentation on usage of implied do in Fortran
include (7fortran)   - [FORTRAN] including source text
initialize_arrays (7fortran) - [FORTRAN:FAQ] Initializing small 2D numeric arrays with array constructors
inquire (7fortran)   - [FORTRAN:FILE_INQUIRE] File inquiry statement
intrinsics (7fortran) - [FORTRAN] intrinsic man(1) pages
intrinsics_project (7fortran) - [FORTRAN] intrinsic man(1) pages
iso_c_binding (7fortran) - [FORTRAN] standard intrinsic module which defines named constants, types, and procedures for C interoperability
iso_fortran_env (7fortran) - [FORTRAN] standard intrinsic module provides public entities related to the Fortran environment
namelist (7fortran)  - [FORTRAN:STATEMENT] specify a group of data to be referred to by a single name in data input/output
nullify (7fortran)   - [FORTRAN:STATEMENT] causes pointers to be disassociated
open (7fortran)      - [FORTRAN:IO] Initiates or modifies a connection between an external file and a specified unit.
pointers (7fortran)  - [FORTRAN] Pointers and targets methods

modulo (3fortran)    - [FORTRAN:INTRINSIC:NUMERIC] Modulo function
move_alloc (3fortran) - [FORTRAN:INTRINSIC] Move allocation from one object to another
mvbits (3fortran)    - [FORTRAN:INTRINSIC:BIT MANIPULATION] Move bits from one integer to another
nearest (3fortran)   - [FORTRAN:INTRINSIC:MODEL_COMPONENTS] Nearest representable number
new_line (3fortran)  - [FORTRAN:INTRINSIC] New line character
nint (3fortran)      - [FORTRAN:INTRINSIC:NUMERIC] Nearest whole number
norm2 (3fortran)     - [FORTRAN:INTRINSIC:MATHEMATICS] Euclidean vector norm
not (3fortran)       - [FORTRAN:INTRINSIC:BIT MANIPULATION] Logical negation
notopen (3)          - [M_io] Find a FUN/LUN (Fortran-unit-number) that is not in use
null (3fortran)      - [FORTRAN:INTRINSIC:TRANSFORMATIONAL FUNCTION] Function that returns an disassociated pointer
num_images (3fortran) - [FORTRAN:INTRINSIC] Number of images
pack (3fortran)      - [FORTRAN:INTRINSIC:ARRAY CONSTRUCTION] Pack an array into an array of rank one
parity (3fortran)    - [FORTRAN:INTRINSIC:TRANSFORMATIONAL FUNCTION] Reduction with exclusive OR()
popcnt (3fortran)    - [FORTRAN:INTRINSIC:BIT INQUIRY] Number of bits set
poppar (3fortran)    - [FORTRAN:INTRINSIC:BIT INQUIRY] Parity of the number of bits set
precision (3fortran) - [FORTRAN:INTRINSIC] Decimal precision of a real kind
present (3fortran)   - [FORTRAN:INTRINSIC] Determine whether an optional dummy argument is specified
process_close (3)    - [M_process] Fortran Module for calling process-related C functions from Fortran
process_open_read (3) - [M_process] Fortran Module for calling process-related C functions from Fortran
process_open_write (3) - [M_process] Fortran Module for calling process-related C functions from Fortran
process_readline (3) - [M_process] Fortran Module for calling process-related C functions from Fortran
process_writeline (3) - [M_process] Fortran Module for calling process-related C functions from Fortran
product (3fortran)   - [FORTRAN:INTRINSIC:ARRAY REDUCTION] Product of array elements
protected (7fortran) - [FORTRAN:SPECIFICATION ATTRIBUTE] protect use associated module objects from change outside of the module
pure (7fortran)      - [FORTRAN:SPECIFICATION ATTRIBUTE] Pure procedures
radix (3fortran)     - [FORTRAN:INTRINSIC] Base of a model number
random_number (3fortran) - [FORTRAN:INTRINSIC] Pseudo-random number
random_seed (3fortran) - [FORTRAN:INTRINSIC] Initialize a pseudo-random number sequence
range (3fortran)     - [FORTRAN:INTRINSIC] Decimal exponent range of a real kind
rank (3fortran)      - [FORTRAN:INTRINSIC:ARRAY INQUIRY] Rank of a data object
real (3fortran)      - [FORTRAN:INTRINSIC:NUMERIC] Convert to real type
redo (3)             - [M_history] Fortran-based Input History Editor
repeat (3fortran)    - [FORTRAN:INTRINSIC:CHARACTER] Repeated string concatenation
reshape (3fortran)   - [FORTRAN:INTRINSIC:ARRAY RESHAPE] Function to reshape an array
return (3fortran)    - [fortran] completes execution of the instance of the subprogram in which it appears
rewind (7fortran)    - [FORTRAN:FILE_POSITIONING] rewind specified sequential access I/O unit
rrspacing (3fortran) - [FORTRAN:INTRINSIC:MODEL_COMPONENTS] Reciprocal of the relative spacing
same_type_as (3fortran) - [FORTRAN:INTRINSIC] Query dynamic types for equality
save (7fortran)      - [FORTRAN:STATEMENT:ATTRIBUTE] specifies that a local variable retains its status and value after a RETURN
scale (3fortran)     - [FORTRAN:INTRINSIC:MODEL_COMPONENTS] Scale a real value
scan (3fortran)      - [FORTRAN:INTRINSIC:CHARACTER] Scan a string for the presence of a set of characters
scratch (7fortran)   - [FORTRAN:OPEN] where scratch files are typically written by OPEN(3f)
select (7fortran)    - [FORTRAN:EXECUTION CONTROL] select a block based on the value of an expression (a case)
select_type (3fortran) - [FORTRAN:EXECUTION_CONTROL] select_type
selected_char_kind (3fortran) - [FORTRAN:INTRINSIC] Choose character kind
selected_int_kind (3fortran) - [FORTRAN:INTRINSIC] Choose integer kind
selected_real_kind (3fortran) - [FORTRAN:INTRINSIC] Choose real kind
set_exponent (3fortran) - [FORTRAN:INTRINSIC:MODEL_COMPONENTS] Set the exponent of the model
shape (3fortran)     - [FORTRAN:INTRINSIC:ARRAY INQUIRY] Determine the shape of an array
shifta (3fortran)    - [FORTRAN:INTRINSIC:BIT MANIPULATION] shift bits right with fill
shiftl (3fortran)    - [FORTRAN:INTRINSIC:BIT MANIPULATION] shift bits left
shiftr (3fortran)    - [FORTRAN:INTRINSIC:BIT MANIPULATION] shift bits right
sign (3fortran)      - [FORTRAN:INTRINSIC:NUMERIC] Sign copying function
sign (7fortran)      - [FORTRAN:IO] option to force optional plus sign on output values
sin (3fortran)       - [FORTRAN:INTRINSIC:TRIGONOMETRIC] Sine function
sinh (3fortran)      - [FORTRAN:INTRINSIC:TRIGONOMETRIC] Hyperbolic sine function
size (3fortran)      - [FORTRAN:INTRINSIC:ARRAY INQUIRY] Determine the size of an array
sngl (3fortran)      - [FORTRAN:INTRINSIC] Convert double precision real to default real
spacing (3fortran)   - [FORTRAN:INTRINSIC:MODEL_COMPONENTS] Smallest distance between two numbers of a given type
spread (3fortran)    - [FORTRAN:INTRINSIC:ARRAY CONSTRUCTION] Add a dimension to an array
sqrt (3fortran)      - [FORTRAN:INTRINSIC:MATHEMATICS] Square-root function
stop (7fortran)      - [FORTRAN:STATEMENT] initiates termination of execution
storage_size (3fortran) - [FORTRAN:INTRINSIC:BIT INQUIRY] Storage size in bits
sum (3fortran)       - [FORTRAN:INTRINSIC:ARRAY REDUCTION] sum the elements of an array
system_chdir (3)     - [M_system] call chdir(3c) from Fortran to change working directory
system_clock (3fortran) - [FORTRAN:INTRINSIC:SYSTEM ENVIRONMENT] Return numeric data from a real-time clock.
system_getegid (3)   - [M_system:QUERY] get the effective group ID (GID) of current process from Fortran by calling getegid(3c)
system_getenv (3)    - [M_system:ENVIRONMENT] get environment variable from Fortran by calling get_environment_variable(3f)
system_geteuid (3)   - [M_system:QUERY] get effective UID of current process from Fortran by calling geteuid(3c)
system_getgid (3)    - [M_system:QUERY] get the real group ID (GID) of current process from Fortran by calling getgid(3c)
system_getpid (3)    - [M_system:QUERY] get PID (process ID) of current process from Fortran by calling getpid(3c)
system_getppid (3)   - [M_system:QUERY] get parent process ID (PPID) of current process from Fortran by calling getppid(3c)
system_getuid (3)    - [M_system:QUERY] get real UID of current process from Fortran by calling getuid(3c)
system_putenv (3)    - [M_system:ENVIRONMENT] set environment variable from Fortran by calling putenv(3c)
system_readline (3)  - [M_readline] Call readline(3c) from Fortran
system_uname (3)     - [M_system] call a C wrapper that calls uname(3c) to get current system information from Fortran
tan (3fortran)       - [FORTRAN:INTRINSIC:TRIGONOMETRIC] Tangent function
tanh (3fortran)      - [FORTRAN:INTRINSIC:TRIGONOMETRIC] Hyperbolic tangent function
this_image (3fortran) - [FORTRAN:INTRINSIC] Cosubscript index of this image
tiny (3fortran)      - [FORTRAN:INTRINSIC] Smallest positive number of a real kind
trailz (3fortran)    - [FORTRAN:INTRINSIC:BIT INQUIRY] Number of trailing zero bits of an integer
transfer (3fortran)  - [FORTRAN:INTRINSIC:BIT MANIPULATION] Transfer bit patterns
transpose (3fortran) - [FORTRAN:INTRINSIC:ARRAY MANIPULATION] Transpose an array of rank two
trim (3fortran)      - [FORTRAN:INTRINSIC:CHARACTER] Remove trailing blank characters of a string
ubound (3fortran)    - [FORTRAN:INTRINSIC:ARRAY INQUIRY] Upper dimension bounds of an array
ufpp (1)             - [DEVELOPER] pre-process FORTRAN source files
ufpp_overview (7)    - [DEVELOPER] a Fortran source code pre-processor
unicode_example1 (1) - [FORTRAN] UNICODE example
unpack (3fortran)    - [FORTRAN:INTRINSIC:ARRAY CONSTRUCTION] Store the elements of a vector in an array of higher rank
upper_quoted (3)     - [M_strings:CASE] ! elemental function converts string to miniscule skipping strings quoted per Fortran syn...
use (7fortran)       - [FORTRAN] gives a program unit accessibility to public entities in a module.
verify (3fortran)    - [FORTRAN:INTRINSIC:CHARACTER] Scan a string for the absence of a set of characters
where (7fortran)     - [FORTRAN:ASSIGNMENT] masked array assignment
EXAMPLE
  Sample

   program demo_fortran
   implicit none
   character(len=*),parameter :: ident="@(#)example(1f): example program"
   integer :: bb
   integer :: i_myloop
      call sub1(10,bb)
      write(*,*)'BB=',bb
   !-----------------------------------------------------------------------
   MYLOOP: do I_MYLOOP=1,10  ! DO loop
      cycle MYLOOP           ! start next pass of loop
      exit  MYLOOP           ! go to next statement after corresponding ENDDO
   enddo MYLOOP
   !-----------------------------------------------------------------------
   block
   character(LEN=1) :: c
   select case (c)
   case ('a' : 'j')
      write(*,*)  'One of the first ten letters'
   case ('l' : 'p', 'u' : 'y')
      write(*,*)  'One of l, m, n, o, p, u, v, w, x, y'
   case ('z', 'q' : 't')
      WRITE(*,*)  'One of z, q, r, s, t'
   case default
      write(*,*)  'Other characters, which may not be letters'
   endselect
   endblock
   !-----------------------------------------------------------------------
   CHAR: block
   ! ALLOCATABLE CHARACTER ARRAY
   character(len=80),allocatable :: help_text(:)
   integer                       :: i
   help_text=[ &
   &'12345678901234567890123456789012345678901234567890123456789012345678901234567890',&
   &'This is example help text for the example program                               ',&
   &'The example program uses kracken(3f) for command line parsing.                  ',&
   &'                                                                                ',&
   &'                                                                                ',&
   &'                                                                                ',&
   &'                                                                                ']
   WRITE(*,'(a)')(help_text(i),i=1,size(help_text))
   endblock CHAR
   !-----------------------------------------------------------------------

     contains

     subroutine sub1(a,b,c)
     integer,intent(in)                                 :: a
     integer,intent(out)                                :: b
     character(len=:),intent(out),allocatable,optional  :: c
        b=2*a
        if(present(c))then
           c='Hello World'
        endif
     end subroutine sub1

     integer function signum (n)
     !An integer signum function
     integer,intent(in) :: n
     select case (n)
     case  (:-1)  ;  signum  =  -1
     case  (0)    ;  signum  =   0
     case  (1:)   ;  signum  =   1
     end select
     end function signum

   end program demo_fortran
