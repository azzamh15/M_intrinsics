." Text automatically generated by txt2man
.TH "dot_product" "3fortran" "July 01, 2020" "" "" " "
." -----------------------------------------------------------------
." * set default formatting
." disable hyphenation
.nh
." disable justification (adjust text to left margin only)
.ad l
." -----------------------------------------------------------------
.SH NAME
\fB
\fBdot_product(3f) \fP- [FORTRAN:INTRINSIC:TRANSFORMATIONAL FUNCTION] Dot product function
\fB
.SH SYNTAX

result = \fBdot_product\fP(vector_a, vector_b)
.SH DESCRIPTION

\fBdot_product\fP(vector_a, vector_b) computes the dot product multiplication
of two vectors vector_a and vector_b. The two vectors may be
either numeric or logical and must be arrays of rank one and of equal size. If
the vectors are INTEGER or REAL, the result is
\fBsum\fP(vector_a*vector_b). If the vectors are COMPLEX, the result
is \fBsum\fP(conjg(vector_a)*vector_b). If the vectors are LOGICAL,
the result is \fBany\fP(vector_a .and. vector_b).
.SH ARGUMENTS

.TP
.B vector_a
The type shall be numeric or LOGICAL, rank 1.
.TP
.B vector_b
The type shall be numeric if vector_a is of numeric type or LOGICAL
if vector_a is of type LOGICAL. vector_b shall be a rank-one array.
.SH RETURN VALUE

If the arguments are numeric, the return value is a scalar of numeric type,
INTEGER, REAL, or COMPLEX. If the arguments are
LOGICAL, the return value is .true. or .false..
.SH EXAMPLE

Sample program:
.PP
.nf
.fam C
    program demo_dot_prod
        integer, dimension(3) :: a, b
        a = (/ 1, 2, 3 /)
        b = (/ 4, 5, 6 /)
        print '(3i3)', a
        print *
        print '(3i3)', b
        print *
        print *, dot_product(a,b)
    end program demo_dot_prod

.fam T
.fi
.SH STANDARD

[[Fortran 95]] and later
.SH CLASS

Transformational function
