." Text automatically generated by txt2man
.TH "transpose" "3fortran" "July 02, 2020" "" "" " "
." -----------------------------------------------------------------
." * set default formatting
." disable hyphenation
.nh
." disable justification (adjust text to left margin only)
.ad l
." -----------------------------------------------------------------
.SH NAME
\fBtranspose(3f) \fP- [FORTRAN:INTRINSIC:ARRAY MANIPULATION] Transpose an array of rank two
\fB
.SH SYNTAX
result = \fBtranspose\fP(matrix)
.SH DESCRIPTION
Transpose an array of rank two. Element (i, j) of the result has the
value \fBmatrix\fP(j, i), for all i, j.
.SH ARGUMENTS
.TP
.B MATRIX
Shall be an array of any type and have a rank of two.
.SH RETURN VALUE
The result has the same type as MATRIX, and has shape
[ m, n ] if MATRIX has shape [ n, m ].
.SH EXAMPLE
Sample program:
.PP
.nf
.fam C
    program demo_transpose
    implicit none
    integer,save :: xx(3,5)= reshape([&
        1,  2,  3,  4,  5,    &
       10, 20, 30, 40, 50,    &
       11, 22, 33, 44, -1055  &
     ],shape(xx),order=[2,1])
    call print_matrix_int('xx array:',xx)
    call print_matrix_int('xx array transposed:',transpose(xx))
    contains
    subroutine print_matrix_int(title,arr)
    ! print small 2d integer arrays in row-column format
    implicit none
    character(len=*),intent(in)  :: title
    integer,intent(in)           :: arr(:,:)
    integer                      :: i
    character(len=:),allocatable :: biggest
       write(*,*)trim(title)  ! print title
       biggest='           '  ! make buffer to write integer into
       ! find how many characters to use for integers
       write(biggest,'(i0)')ceiling(log10(real(maxval(abs(arr)))))+2
       ! use this format to write a row
       biggest='(" > [",*(i'//trim(biggest)//':,","))'
       ! print one row of array at a time
       do i=1,size(arr,dim=1)
          write(*,fmt=biggest,advance='no')arr(i,:)
          write(*,'(" ]")')
       enddo
    end subroutine print_matrix_int
    end program demo_transpose

.fam T
.fi
Results:
.PP
.nf
.fam C
    xx array:
    > [     1,     2,     3,     4,     5 ]
    > [    10,    20,    30,    40,    50 ]
    > [    11,    22,    33,    44, -1055 ]
    xx array transposed:
    > [     1,    10,    11 ]
    > [     2,    20,    22 ]
    > [     3,    30,    33 ]
    > [     4,    40,    44 ]
    > [     5,    50, -1055 ]

.fam T
.fi
.SH STANDARD
Fortran 95 and later
.SH CLASS
Transformational function
