." Text automatically generated by txt2man
.TH "atomic_add" "3fortran" "July 25, 2020" "" "" " "
." -----------------------------------------------------------------
." * set default formatting
." disable hyphenation
.nh
." disable justification (adjust text to left margin only)
.ad l
." -----------------------------------------------------------------
.SH NAME
\fBatomic_add(3f) \fP- [FORTRAN:INTRINSIC:ATOMIC] Atomic ADD operation
\fB
.SH SYNTAX

call atomic_add (atom, value [, stat])
.SH DESCRIPTION

\fBatomic_add\fP(atom, value) atomically adds the value of VAR to the
variable ATOM. When STAT is present and the invocation was
successful, it is assigned the value 0. If it is present and the
invocation has failed, it is assigned a positive value; in particular,
for a coindexed ATOM, if the remote image has stopped, it is
assigned the value of iso_fortran_env's stat_stopped_image and if
the remote image has failed, the value stat_failed_image.
.SH ARGUMENTS

.TP
.B ATOM
Scalar coarray or coindexed variable of integer
type with atomic_int_kind kind.
.TP
.B VALUE
Scalar of the same type as ATOM. If the kind
is different, the value is converted to the kind of ATOM.
.TP
.B STAT
(optional) Scalar default-kind integer variable.
.SH EXAMPLE

Sample program:
.PP
.nf
.fam C
   program demo_atomic_add
     use iso_fortran_env
     implicit none
     integer(atomic_int_kind) :: atom[*]
     call atomic_add (atom[1], this_image())
   end program demo_atomic_add

.fam T
.fi
.SH STANDARD

[[TS 18508]] or later
.SH CLASS

Atomic subroutine
.SH SEE ALSO

\fBatomic_define\fP(3), \fBatomic_fetch_add\fP(3), \fBiso_fortran_env\fP(3),
\fBatomic_and\fP(3), \fBatomic_or\fP(3), \fBatomic_xor\fP(3)
