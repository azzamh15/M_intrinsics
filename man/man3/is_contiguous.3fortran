." Text automatically generated by txt2man
.TH "is_contiguous" "3fortran" "June 30, 2020" "" "" " "
." -----------------------------------------------------------------
." * set default formatting
." disable hyphenation
.nh
." disable justification (adjust text to left margin only)
.ad l
." -----------------------------------------------------------------
.SH NAME
\fBis_contiguous(3f) \fP- [FORTRAN:INTRINSIC:ARRAY INQUIRY] test if object is contiguous
\fB
.SH SYNTAX
result = \fBis_contiguous\fP(A)
.SH DESCRIPTION
True if and only if an object is contiguous.
.PP
An object is contiguous if it is
.RS
.TP
.B (1)
an object with the CONTIGUOUS attribute,
.TP
.B (2)
a nonpointer whole array that is not assumed-shape,
.TP
.B (3)
an assumed-shape array that is argument associated with an array that is contiguous,
.TP
.B (4)
an array allocated by an ALLOCATE statement,
.TP
.B (5)
a pointer associated with a contiguous target, or
.TP
.B (6)
a nonzero-sized array section provided that
.RS
.TP
.B (a)
its base object is contiguous,
.TP
.B (b)
it does not have a vector subscript,
.TP
.B (c)
the elements of the section, in array element order, are a subset of the base object elements
that are consecutive in array element order,
.TP
.B (d)
if the array is of type character and a substring-range appears, the substring-range specifies all
of the characters of the parent-string,
.TP
.B (e)
only its final part-ref has nonzero rank, and
.TP
.B (f)
it is not the real or imaginary part of an array of type complex.
.RE
.RE
.PP
An object is not contiguous if it is an array subobject, and
.RS
.IP \(bu 3
the object has two or more elements,
.IP \(bu 3
the elements of the object in array element order are not consecutive in the elements of the base object,
.IP \(bu 3
the object is not of type character with length zero, and
.IP \(bu 3
the object is not of a derived type that has no ultimate components other than zero-sized arrays and
.IP \(bu 3
characters with length zero.
.RE
.PP
It is processor-dependent whether any other object is contiguous.
.SH ARGUMENTS

.TP
.B A
may be of any type. It shall be an array. If it is a
pointer it shall be associated.
.SH RETURN VALUE

.TP
.B Result
of type Default logical scalar.
The result has the value true if A is contiguous, and false otherwise.
.SH EXAMPLE
Sample program:
.PP
.nf
.fam C
   program demo_is_contiguous
   implicit none
   intrinsic is_contiguous
   REAL, DIMENSION (1000, 1000), TARGET :: A
   REAL, DIMENSION (:, :), POINTER       :: IN, OUT
   IN => A              ! Associate IN with target A
   OUT => A(1:1000:2,:) ! Associate OUT with subset of target A
   !
   write(*,*)'IN is ',IS_CONTIGUOUS(IN)
   write(*,*)'OUT is ',IS_CONTIGUOUS(OUT)
   !
   end program demo_is_contiguous

.fam T
.fi
.SH STANDARD

[[Fortran 2008]] and later
.SH CLASS

[[Inquiry function]]
