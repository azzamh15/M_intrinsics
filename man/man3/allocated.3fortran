." Text automatically generated by txt2man
.TH "allocated" "3fortran" "December 22, 2020" "" "" " "
." -----------------------------------------------------------------
." * set default formatting
." disable hyphenation
.nh
." disable justification (adjust text to left margin only)
.ad l
." -----------------------------------------------------------------
.SH NAME
\fBallocated(3f) \fP- [FORTRAN:INTRINSIC:ARRAY INQUIRY] Status of an
\fBallocatable entity
\fB
.SH SYNTAX
.IP \(bu 3
result = \fBALLOCATED\fP(ARRAY)
.IP \(bu 3
result = \fBALLOCATED\fP(SCALAR)
.SH DESCRIPTION
\fBALLOCATED\fP(ARRAY) and \fBALLOCATED\fP(SCALAR) check the allocation status of
ARRAY and SCALAR, respectively.
.SH ARGUMENTS
.TP
.B ARRAY
the argument shall be an ALLOCATABLE array.
.TP
.B SCALAR
the argument shall be an ALLOCATABLE scalar.
.SH RETURN VALUE
The return value is a scalar LOGICAL with the default logical
kind type parameter. If the argument is allocated then the result
is .true.; otherwise, it returns .false..
.SH EXAMPLE
Sample program:
.PP
.nf
.fam C
    program demo_allocated
    implicit none
    integer :: i = 4
    real(4), allocatable :: x(:)
       if (allocated(x) .eqv. .false.) allocate(x(i))
    end program demo_allocated

.fam T
.fi
.SH STANDARD
[[Fortran 95]] and later. Note, the scalar= keyword and allocatable
scalar entities are available in Fortran 2003 and later.
.SH CLASS
[[Inquiry function]]
.SH SEE ALSO
\fBmove_alloc\fP(3)
