." Text automatically generated by txt2man
.TH "findloc" "3fortran" "December 16, 2020" "" "" " "
." -----------------------------------------------------------------
." * set default formatting
." disable hyphenation
.nh
." disable justification (adjust text to left margin only)
.ad l
." -----------------------------------------------------------------
.SH NAME
\fBfindloc(3f) \fP- [FORTRAN:INTRINSIC] Location of first element of ARRAY
\fBidentified by MASK along dimension DIM having a value
\fB
.SH SYNOPSIS
.nf
.fam C
FINDLOC (\fIARRAY\fP, \fIVALUE\fP, DIM [, \fIMASK\fP, \fIKIND\fP, \fIBACK\fP])
or
FINDLOC (\fIARRAY\fP, \fIVALUE\fP [, \fIMASK\fP, \fIKIND\fP, \fIBACK\fP])
.fam T
.fi
.SH DESCRIPTION
Location of the first element of \fIARRAY\fP identified by \fIMASK\fP along
dimension DIM having a value equal to \fIVALUE\fP.
.RE
.PP

.RS
If both \fIARRAY\fP and \fIVALUE\fP are of type logical, the comparison is performed
with the .EQV. operator; otherwise, the comparison is performed with
the == operator. If the value of the comparison is true, that element
of \fIARRAY\fP matches \fIVALUE\fP.
.PP
If only one element matches \fIVALUE\fP, that element's subscripts are
returned. Otherwise, if more than one element matches \fIVALUE\fP and \fIBACK\fP is
absent or present with the value false, the element whose subscripts are
returned is the first such element, taken in array element order. If
\fIBACK\fP is present with the value true, the element whose subscripts are
returned is the last such element, taken in array element order.
.SH OPTIONS
.TP
.B \fIARRAY\fP
shall be an array of intrinsic type.
.TP
.B \fIVALUE\fP
shall be scalar and in type conformance with \fIARRAY\fP, as specified
in Table 7.3 for relational intrinsic operations 7.1.5.5.2).
.TP
.B DIM
shall be an integer scalar with a value in the range 1 DIM n,
where n is the rank of \fIARRAY\fP.
The corresponding actual argument shall not be an optional dummy
argument.
.TP
.B \fIMASK\fP
(optional) shall be of type logical and shall be conformable
with \fIARRAY\fP.
.TP
.B \fIKIND\fP
(optional) shall be a scalar integer initialization expression.
.TP
.B \fIBACK\fP
(optional) shall be a logical scalar.
.SH RESULT
Result Characteristics. Integer. If \fIKIND\fP is present, the kind type
parameter is that specified by the value of \fIKIND\fP; otherwise the kind
type parameter is that of default integer type. If DIM does not appear,
the result is an array of rank one and of size equal to the rank of
\fIARRAY\fP; otherwise, the result is of rank n - 1 and shape
.PP
.nf
.fam C
   [d1 , d2 , . . . , dDIM-1 , dDIM+1 , . . . , dn ]

.fam T
.fi
where
.PP
.nf
.fam C
   [d1 , d2 , . . . , dn ]

.fam T
.fi
is the shape of \fIARRAY\fP.
.SS  RESULT VALUE

.TP
.B Case (i):
The result of FINDLOC (\fIARRAY\fP, \fIVALUE\fP) is a rank-one array
whose element values are the values of the subscripts
of an element of \fIARRAY\fP whose value matches \fIVALUE\fP. If
there is such a value, the ith subscript returned lies
in the range 1 to ei , where ei is the extent of the
ith dimension of \fIARRAY\fP. If no elements match \fIVALUE\fP or
\fIARRAY\fP has size zero, all elements of the result are zero.
.TP
.B Case (ii):
The result of FINDLOC (\fIARRAY\fP, \fIVALUE\fP, \fIMASK\fP = \fIMASK\fP) is a
rank-one array whose element values are the values of
the subscripts of an element of \fIARRAY\fP, corresponding to
a true element of \fIMASK\fP, whose value matches \fIVALUE\fP. If
there is such a value, the ith subscript returned lies
in the range 1 to ei , where ei is the extent of the
ith dimension of \fIARRAY\fP. If no elements match \fIVALUE\fP,
\fIARRAY\fP has size zero, or every element of \fIMASK\fP has the
value false, all elements of the result are zero.
.TP
.B Case (iii):
If \fIARRAY\fP has rank one, the result of
.PP
.nf
.fam C
                 findloc (array, value, dim=dim [, mask = mask])

.fam T
.fi
.RS
is a scalar whose value is equal to that of the first element of
.PP
.nf
.fam C
                 findloc (array, value [, mask = mask])

.fam T
.fi
Otherwise, the value of element
.PP
.nf
.fam C
                 (s1 , s2 , . . . , sDIM-1 , sDIM+1 , . . . , sn )

.fam T
.fi
of the result is equal to
.PP
.nf
.fam C
                 findloc (array (s1, s2, \.\.\., sdim-1, :, sdim+1, ..., sn ), &
                 value, dim=1 [, mask = mask (s1, s2, \.\.\., sdim-1, :,
                                 sdim+1 ,\.\.\. , sn )]).

.fam T
.fi
.SH EXAMPLE
.TP
.B Case (i):
The value of
.PP
.nf
.fam C
                  findloc ([2, 6, 4, 6,], value = 6)

.fam T
.fi
.RS
is [2], and the value of
.PP
.nf
.fam C
                  findloc ([2, 6, 4, 6], value = 6, back = .true.)

.fam T
.fi
is [4].
.RE
.TP
.B Case (ii):
If A
has the value
.PP
.nf
.fam C
                 > 0 -5  7 7
                 > 3  4 -1 2
                 > 1  5  6 7

.fam T
.fi
.RS
and M has the value
.PP
.nf
.fam C
                 > T T F T
                 > T T F T
                 > T T F T

                 FINDLOC (A, 7, MASK = M)

.fam T
.fi
has the value [1, 4] and
.PP
.nf
.fam C
                 FINDLOC (A, 7, MASK = M, BACK = .TRUE.)

.fam T
.fi
has the value [3, 4]. This is independent of the declared
lower bounds for A.
.RE
.TP
.B Case (iii):
The value of
.PP
.nf
.fam C
                 FINDLOC ([2, 6, 4], VALUE = 6, DIM = 1)

.fam T
.fi
.RS
is 2. If B has the value
.PP
.nf
.fam C
                  > 1 2 -9
                  > 2 2  6

.fam T
.fi
.RS
FINDLOC (B, \fIVALUE\fP = 2, DIM = 1)
.RE
.PP
has the value [2, 1, 0] and
.PP
.nf
.fam C
                 FINDLOC (B, VALUE = 2, DIM = 2)

.fam T
.fi
has the value [2, 1]. This is independent of the declared
lower bounds for B.
.SH CLASS
Transformational function.
