." Text automatically generated by txt2man
.TH "mod" "3fortran" "December 06, 2020" "" "" " "
." -----------------------------------------------------------------
." * set default formatting
." disable hyphenation
.nh
." disable justification (adjust text to left margin only)
.ad l
." -----------------------------------------------------------------
.SH NAME
\fBmod(3f) \fP- [FORTRAN:INTRINSIC:NUMERIC] Remainder function
\fB
.SH SYNTAX
result = \fBmod\fP(a, p)
.SH DESCRIPTION
\fBmod\fP(a,p) computes the remainder of the division of A by P.
.SH ARGUMENTS
.TP
.B A
Shall be a scalar of type INTEGER or REAL.
.TP
.B P
Shall be a scalar of the same type and kind as A and not equal to zero.
.SH RETURN VALUE
The return value is the result of a - (int(a/p) * p). The type
and kind of the return value is the same as that of the arguments. The
returned value has the same sign as A and a magnitude less than the
magnitude of P.
.SH EXAMPLE
Sample program:
.PP
.nf
.fam C
   program demo_mod
   implicit none
     print *, mod(17,3)           ! yields 2
     print *, mod(17.5,5.5)       ! yields 1.0
     print *, mod(17.5d0,5.5d0)   ! yields 1.0d0
     print *, mod(17.5d0,5.5d0)   ! yields 1.0d0

     print *, mod(-17,3)          ! yields -2
     print *, mod(-17.5,5.5)      ! yields -1.0
     print *, mod(-17.5d0,5.5d0)  ! yields -1.0d0
     print *, mod(-17.5d0,5.5d0)  ! yields -1.0d0

     print *, mod(17,-3)          ! yields 2
     print *, mod(17.5,-5.5)      ! yields 1.0
     print *, mod(17.5d0,-5.5d0)  ! yields 1.0d0
     print *, mod(17.5d0,-5.5d0)  ! yields 1.0d0
   end program demo_mod

.fam T
.fi
.SH STANDARD
[[FORTRAN 77]] and later
.SH CLASS
[[Elemental procedure|Elemental function]]
.SH SEE ALSO
\fBmodulo\fP(3)
