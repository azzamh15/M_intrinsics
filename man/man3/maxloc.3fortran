." Text automatically generated by txt2man
.TH "maxloc" "3fortran" "October 05, 2020" "" "" " "
." -----------------------------------------------------------------
." * set default formatting
." disable hyphenation
.nh
." disable justification (adjust text to left margin only)
.ad l
." -----------------------------------------------------------------
.SH NAME
\fBmaxloc(3f) \fP- [FORTRAN:INTRINSIC:ARRAY LOCATION] Location of the
\fBmaximum value within an array
\fB
.SH SYNTAX
result = \fBmaxloc\fP(array, dim [, mask])
result = \fBmaxloc\fP(array [, mask])
.SH DESCRIPTION
Determines the location of the element in the array with the maximum
value, or, if the DIM argument is supplied, determines the
locations of the maximum element along each row of the array in the
DIM direction. If MASK is present, only the elements for
which MASK is .true. are considered. If more than one
element in the array has the maximum value, the location returned is
that of the first such element in array element order. If the array has
zero size, or all of the elements of MASK are .false., then
the result is an array of zeroes. Similarly, if DIM is supplied
and all of the elements of MASK along a given row are zero, the
result value for that row is zero.
.SH ARGUMENTS
.TP
.B ARRAY
Shall be an array of type INTEGER, REAL, or CHARACTER.
.TP
.B DIM
(Optional) Shall be a scalar of type
INTEGER, with a value between one and the rank of ARRAY,
inclusive. It may not be an optional dummy argument.
.TP
.B MASK
Shall be an array of type LOGICAL, and conformable with ARRAY.
.SH RETURN VALUE
If DIM is absent, the result is a rank-one array with a length
equal to the rank of ARRAY. If DIM is present, the result
is an array with a rank one less than the rank of ARRAY, and a
size corresponding to the size of ARRAY with the DIM
dimension removed. If DIM is present and ARRAY has a rank
of one, the result is a scalar. In all cases, the result is of default
INTEGER type.
.SH EXAMPLE
sample program:
.PP
.nf
.fam C
    program demo_maxloc
    implicit none
    integer,save :: ints(3,5)= reshape([&
       1,  2,  3,  4,  5, &
      10, 20, 30, 40, 50, &
      11, 22, 33, 44, 55  &
    ],shape(ints),order=[2,1])
    write(*,*) maxloc(ints)
    write(*,*) maxloc(ints,dim=1)
    write(*,*) maxloc(ints,dim=2)
    end program demo_maxloc

.fam T
.fi
.SH STANDARD
[[Fortran 95]] and later
.SH CLASS
Transformational function
.SH SEE ALSO
\fBmax\fP(3), \fBmaxval\fP(3)
