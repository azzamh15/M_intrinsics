." Text automatically generated by txt2man
.TH "atomic_cas" "3fortran" "October 05, 2020" "" "" " "
." -----------------------------------------------------------------
." * set default formatting
." disable hyphenation
.nh
." disable justification (adjust text to left margin only)
.ad l
." -----------------------------------------------------------------
.SH NAME
\fBatomic_cas(3f) \fP- [FORTRAN:INTRINSIC:ATOMIC] Atomic compare and swap
\fB
.SH SYNTAX
call atomic_cas (atom, old, compare, new [, stat])
.SH DESCRIPTION
atomic_cas compares the variable ATOM with the value of COMPARE;
if the value is the same, ATOM is set to the value of
NEW. Additionally, OLD is set to the value of ATOM that was used
for the comparison. When STAT is present and the invocation was
successful, it is assigned the value 0. If it is present and the
invocation has failed, it is assigned a positive value; in particular,
for a coindexed ATOM, if the remote image has stopped, it is
assigned the value of iso_fortran_env's stat_stopped_image and if
the remote image has failed, the value stat_failed_image.
.SH ARGUMENTS
.TP
.B ATOM
Scalar coarray or coindexed variable of either integer type
with atomic_int_kind kind or logical type with
atomic_logical_kind kind.
.TP
.B OLD
Scalar of the same type and kind as ATOM.
.TP
.B COMPARE
Scalar variable of the same type and kind as ATOM.
.TP
.B NEW
Scalar variable of the same type as ATOM. If kind is
different, the value is converted to the kind of ATOM.
.TP
.B STAT
(optional) Scalar default-kind integer variable.
.SH EXAMPLE
Sample program:
.PP
.nf
.fam C
   program demo_atomic_cas
     use iso_fortran_env
     implicit none
     logical(atomic_logical_kind) :: atom[*], prev
     call atomic_cas(atom[1], prev, .false., .true.)
   end program demo_atomic_cas

.fam T
.fi
.SH STANDARD
[[TS 18508]] or later
.SH CLASS
Atomic subroutine
.SH SEE ALSO
\fBatomic_define\fP(3), \fBatomic_ref\fP(3), \fBiso_fortran_env\fP(3)
