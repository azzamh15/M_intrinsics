." Text automatically generated by txt2man
.TH "bit_size" "3fortran" "July 02, 2020" "" "" " "
." -----------------------------------------------------------------
." * set default formatting
." disable hyphenation
.nh
." disable justification (adjust text to left margin only)
.ad l
." -----------------------------------------------------------------
.SH NAME
\fBbit_size(3f) \fP- [FORTRAN:INTRINSIC:BIT INQUIRY] Bit size inquiry function
\fB
.SH SYNTAX
result = \fBbit_size\fP(i)
.SH DESCRIPTION
\fBbit_size\fP(i) returns the number of bits (integer precision plus sign bit)
represented by the type of I.
.SH ARGUMENTS
.TP
.B I
The type shall be INTEGER.
.SH RETURN VALUE
The return value is of type INTEGER of the same type as I.
.SH EXAMPLE

Sample program:
.PP
.nf
.fam C
   program demo_bit_size
   use,intrinsic :: iso_fortran_env, only : int8, int16, int32, int64
   implicit none
   integer(kind=int64)          :: answer
   integer                      :: ilen
      write(*,'(i0)')bit_size(bit_size(0_int8))
      write(*,'(i0)')bit_size(bit_size(0_int16))
      write(*,'(i0)')bit_size(bit_size(0_int32))
      write(*,'(i0)')bit_size(bit_size(0_int64))
      answer=0_int64
      ilen=999
      ! notice use of INT(3f)
      ilen=min(ilen,int(bit_size(answer)))
      ! arguments to MIN(3f) would be of different TYPES
      !ilen=min(ilen,bit_size(answer))
      write(*,'(i0)')ilen
   end program demo_bit_size

.fam T
.fi
Expected output:
.PP
.nf
.fam C
    > 8
    > 16
    > 32
    > 64
    > 64

.fam T
.fi
.SH STANDARD

[[Fortran 95]] and later
.SH CLASS

[[Inquiry function]]
