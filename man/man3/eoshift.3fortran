." Text automatically generated by txt2man
.TH "eoshift" "3fortran" "July 27, 2020" "" "" " "
." -----------------------------------------------------------------
." * set default formatting
." disable hyphenation
.nh
." disable justification (adjust text to left margin only)
.ad l
." -----------------------------------------------------------------
.SH NAME
\fB
\fBeoshift(3f) \fP- [FORTRAN:INTRINSIC:TRANSFORMATIONAL FUNCTION] End-off shift elements of an array
\fB
.SH SYNTAX

result = \fBeoshift\fP(array, shift [, boundary, dim])
.SH DESCRIPTION

\fBeoshift\fP(array, shift[, boundary, dim]) performs an end-off shift on
elements of ARRAY along the dimension of DIM. If DIM is
omitted it is taken to be 1. DIM is a scalar of type
INTEGER in the range of 1 <= DIM <= n where "n" is the
rank of ARRAY. If the rank of ARRAY is one, then all elements of
ARRAY are shifted by SHIFT places. If rank is greater than one,
then all complete rank one sections of ARRAY along the given dimension are
shifted. Elements shifted out one end of each rank one section are dropped. If
BOUNDARY is present then the corresponding value of from BOUNDARY
is copied back in the other end. If BOUNDARY is not present then the
following are copied in depending on the type of ARRAY.
.RE
.PP
*Array Type* - *Boundary Value*
.RS
.IP \(bu 3
Numeric 0 of the type and kind of ARRAY
.IP \(bu 3
Logical .false.
.IP \(bu 3
\fBCharacter\fP(LEN) LEN blanks
.SH ARGUMENTS

.TP
.B ARRAY
May be any type, not scalar.
.TP
.B SHIFT
The type shall be INTEGER.
.TP
.B BOUNDARY
Same type as ARRAY.
.TP
.B DIM
The type shall be INTEGER.
.SH RETURN VALUE

Returns an array of same type and rank as the ARRAY argument.
.SH EXAMPLE

Sample program:
.PP
.nf
.fam C
    program demo_eoshift
    implicit none
        integer, dimension(3,3) :: a
        a = reshape( [ 1, 2, 3, 4, 5, 6, 7, 8, 9 ], [ 3, 3 ])
        print '(3i3)', a(1,:)
        print '(3i3)', a(2,:)
        print '(3i3)', a(3,:)
        a = eoshift(a, SHIFT=[1, 2, 1], BOUNDARY=-5, DIM=2)
        print *
        print '(3i3)', a(1,:)
        print '(3i3)', a(2,:)
        print '(3i3)', a(3,:)
    end program demo_eoshift

.fam T
.fi
.SH STANDARD

[[Fortran 95]] and later
.SH CLASS

Transformational function
