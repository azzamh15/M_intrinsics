." Text automatically generated by txt2man
.TH "co_reduce" "3fortran" "October 05, 2020" "" "" " "
." -----------------------------------------------------------------
." * set default formatting
." disable hyphenation
.nh
." disable justification (adjust text to left margin only)
.ad l
." -----------------------------------------------------------------
.SH NAME
\fBco_reduce(3f) \fP- [FORTRAN:INTRINSIC:COLLECTIVE] Reduction of values on the
\fBcurrent set of images
\fB
.SH SYNTAX
call \fBco_reduce\fP(a, operator, [, result_image, stat, errmsg])
.SH DESCRIPTION
co_reduce determines element-wise the reduction of the value of A
on all images of the current team. The pure function passed as
OPERATOR is used to pairwise reduce the values of A by passing
either the value of A of different images or the result values of
such a reduction as argument. If A is an array, the deduction is
done element wise. If result_image is present, the result values are
returned in A on the specified image only and the value of A on
the other images become undefined. If result_image is not present,
the value is returned on all images. If the execution was successful
and STAT is present, it is assigned the value zero. If the
execution failed, STAT gets assigned a nonzero value and, if
present, ERRMSG gets assigned a value describing the occurred error.
.SH ARGUMENTS
.TP
.B A
- is an \fBintent\fP(inout) argument and shall be nonpolymorphic. If
it is allocatable, it shall be allocated; if it is a pointer, it
shall be associated. A shall have the same type and type
parameters on all images of the team; if it is an array, it shall
have the same shape on all images.
.TP
.B OPERATOR
- pure function with two scalar nonallocatable arguments,
which shall be nonpolymorphic and have the same type and type
parameters as A. The function shall return a nonallocatable
scalar of the same type and type parameters as A. The function
shall be the same on all images and with regards to the arguments
mathematically commutative and associative. Note that OPERATOR
may not be an elemental function, unless it is an intrinsic function.
.TP
.B result_image
- (optional) a scalar integer expression; if present,
it shall have the same the same value on all images and refer to an
image of the current team.
.TP
.B STAT
- (optional) a scalar integer variable
.TP
.B ERRMSG
- (optional) a scalar character variable
.SH EXAMPLE
Sample program:
.PP
.nf
.fam C
   program demo_co_reduce
   implicit none
     integer :: val
     val = this_image()
     call co_reduce(val, result_image=1, operator=myprod)
     if (this_image() == 1) then
       write(*,*) "Product value", val  ! prints num_images() factorial
     end if
   contains
     pure function myprod(a, b)
       integer, value :: a, b
       integer :: myprod
       myprod = a * b
     end function myprod
   end program demo_co_reduce

.fam T
.fi
.SH NOTE
While the rules permit in principle an intrinsic function, none of the
intrinsics in the standard fulfill the criteria of having a specific
function, which takes two arguments of the same type and returning
that type as result.
.SH STANDARD
[[TS 18508]] or later
.SH CLASS
[[Collective subroutine]]
.SH SEE ALSO
\fBco_min\fP(3), \fBco_max\fP(3), \fBco_sum\fP(3), \fBco_broadcast\fP(3)
