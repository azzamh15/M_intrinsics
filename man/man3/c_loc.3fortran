." Text automatically generated by txt2man
.TH "c_loc" "3fortran" "July 01, 2020" "" "" " "
." -----------------------------------------------------------------
." * set default formatting
." disable hyphenation
.nh
." disable justification (adjust text to left margin only)
.ad l
." -----------------------------------------------------------------
.SH NAME
\fBc_loc(3f) \fP- [FORTRAN:INTRINSIC:ISO_C_BINDING] Obtain the C address of an object
\fB
.SH SYNTAX

result = \fBc_loc\fP(x)
.SH DESCRIPTION

\fBc_loc\fP(x) determines the C address of the argument.
.SH ARGUMENTS

.TP
.B X
Shall have either the POINTER or TARGET attribute. It
shall not be a coindexed object. It shall either be a variable
with interoperable type and kind type parameters, or be a scalar,
nonpolymorphic variable with no length type parameters.
.SH RETURN VALUE

The return value is of type c_ptr and contains the C address
of the argument.
.SH EXAMPLE

Sample program:
.PP
.nf
.fam C
   subroutine association_test(a,b)
     use iso_c_binding, only: c_associated, c_loc, c_ptr
     implicit none
     real, pointer :: a
     type(c_ptr) :: b
     if(c_associated(b, c_loc(a))) &
        stop 'b and a do not point to same target'
   end subroutine association_test

.fam T
.fi
.SH STANDARD

[[Fortran 2003]] and later
.SH CLASS

[[Inquiry function]]
.SH SEE ALSO

[[c_associated]], [[c_funloc]],
[[c_f_pointer]], [[c_f_procpointer]],
[[iso_c_binding]]
