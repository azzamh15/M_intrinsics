." Text automatically generated by txt2man
.TH "atomic_fetch_or" "3fortran" "July 25, 2020" "" "" " "
." -----------------------------------------------------------------
." * set default formatting
." disable hyphenation
.nh
." disable justification (adjust text to left margin only)
.ad l
." -----------------------------------------------------------------
.SH NAME
\fBatomic_fetch_or(3f) \fP- [FORTRAN:INTRINSIC:ATOMIC:BIT MANIPULATION] Atomic bitwise OR operation with prior fetch
\fB
.SH SYNTAX

call \fBatomic_fetch_or\fP(atom, value, old [, stat])
.SH DESCRIPTION

\fBatomic_fetch_or\fP(atom, value, old) atomically stores the value of ATOM in
OLD and defines ATOM with the bitwise OR between the values of
ATOM and VALUE. When STAT is present and the invocation was
successful, it is assigned the value 0. If it is present and the invocation has
failed, it is assigned a positive value; in particular, for a coindexed
ATOM, if the remote image has stopped, it is assigned the value of
iso_fortran_env's stat_stopped_image and if the remote image has
failed, the value stat_failed_image.
.SH ARGUMENTS

.TP
.B ATOM
Scalar coarray or coindexed variable of integer
type with atomic_int_kind kind.
.TP
.B VALUE
Scalar of the same type as ATOM. If the kind
is different, the value is converted to the kind of ATOM.
.TP
.B OLD
Scalar of the same type and kind as ATOM.
.TP
.B STAT
(optional) Scalar default-kind integer variable.
.SH EXAMPLE

Sample program:
.PP
.nf
.fam C
   program demo_atomic_fetch_or
   use iso_fortran_env
   implicit none
   integer(atomic_int_kind) :: atom[*], old
     call atomic_fetch_or(atom[1], int(b'10100011101'), old)
   end program demo_atomic_fetch_or

.fam T
.fi
.SH STANDARD

[[TS 18508]] or later
.SH CLASS

Atomic subroutine
.SH SEE ALSO

\fBatomic_define\fP(3), \fBatomic_or\fP(3), \fBiso_fortran_env\fP(3),
\fBatomic_fetch_add\fP(3), \fBatomic_fetch_and\fP(3), \fBatomic_fetch_xor\fP(3)
