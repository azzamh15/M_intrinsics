." Text automatically generated by txt2man
.TH "move_alloc" "3fortran" "December 22, 2020" "" "" " "
." -----------------------------------------------------------------
." * set default formatting
." disable hyphenation
.nh
." disable justification (adjust text to left margin only)
.ad l
." -----------------------------------------------------------------
.SH NAME
\fBmove_alloc(3f) \fP- [FORTRAN:INTRINSIC] Move allocation from one object
\fBto another
\fB
.SH SYNTAX
call \fBmove_alloc\fP(src, dest)
.SH DESCRIPTION
\fBmove_alloc\fP(src, dest) moves the allocation from SRC to DEST.
SRC will become deallocated in the process.
.SH ARGUMENTS
.TP
.B SRC
ALLOCATABLE, \fBintent\fP(inout), may be of any type and kind.
.TP
.B DEST
ALLOCATABLE, \fBintent\fP(out), shall be of the same type, kind and
rank as SRC.
.SH EXAMPLE
Basic Sample program to allocate a bigger grid
.PP
.nf
.fam C
   program demo_move_alloc
   implicit none
   ! Example to allocate a bigger GRID
   real, allocatable :: grid(:), tempgrid(:)
   integer :: n, i

.nf
.fam C
      ! initialize small GRID
      n = 3
      allocate (grid(1:n))
      grid = [ (real (i), i=1,n) ]

      ! initialize TEMPGRID which will be used to replace GRID
      allocate (tempgrid(1:2*n))    ! Allocate bigger grid
      tempgrid(::2)  = grid         ! Distribute values to new locations
      tempgrid(2::2) = grid + 0.5   ! initialize other values

      ! move TEMPGRID to GRID
      call MOVE_ALLOC (from=tempgrid, to=grid)

      ! TEMPGRID should no longer be allocated
      ! and GRID should be the size TEMPGRID was
      if (size (grid) /= 2*n .or. allocated (tempgrid)) then
         print *, "Failure in move_alloc!"
      endif
      print *, allocated(grid), allocated(tempgrid)
      print '(99f8.3)', grid

.fam T
.fi
.RS
end program demo_move_alloc
.SH STANDARD
[[Fortran 2003]] and later
.SH CLASS
Pure subroutine
.SH SEE ALSO
\fBallocated\fP(3)
