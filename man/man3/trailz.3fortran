." Text automatically generated by txt2man
.TH "trailz" "3fortran" "July 27, 2020" "" "" " "
." -----------------------------------------------------------------
." * set default formatting
." disable hyphenation
.nh
." disable justification (adjust text to left margin only)
.ad l
." -----------------------------------------------------------------
.SH NAME
\fBtrailz(3f) \fP- [FORTRAN:INTRINSIC:BIT INQUIRY] Number of trailing zero bits of an integer
\fB
.SH SYNTAX
result = \fBtrailz\fP(i)
integer :: result
\fBinteger\fP(kind=NNN),intent(in) :: i
.SH DESCRIPTION
TRAILZ returns the number of trailing zero bits of an INTEGER value
.SH ARGUMENTS
.TP
.B I
Shall be of type INTEGER.
.SH RETURN VALUE

The type of the return value is the default INTEGER.
If all the bits of I are zero, the result value is \fBbit_size\fP(I).
.SH EXAMPLE

Sample program:
.PP
.nf
.fam C
    program demo_trailz
    use, intrinsic :: iso_fortran_env, only : integer_kinds, int8, int16, int32, int64
    implicit none
    integer(kind=int64) :: i, value
      write(*,*)'Default integer:'
      write(*,*)'bit_size=',bit_size(0)
      write(*,'(1x,i3,1x,i3,1x,b0)')-1,trailz(1),-1
      write(*,'(1x,i3,1x,i3,1x,b0)')0,trailz(0),0
      write(*,'(1x,i3,1x,i3,1x,b0)')1,trailz(1),1
      write(*,'(" huge(0)=",i0,1x,i0,1x,b0)')huge(0),trailz(huge(0)),huge(0)
      write(*,*)
      write(*,*)'integer(kind=int64):'
      do i=-1,62,5
         value=2**i
         write(*,'(i19,1x,i3,1x,b64.64)')value,trailz(value),value
      enddo
      value=huge(i)
      write(*,'(i19,1x,i3,1x,b64.64,"(huge(0_int64))")')value,trailz(value),value
    end program demo_trailz
.fam T
.fi
Results:
.PP
.nf
.fam C
   Default integer:
   bit_size=          32
    -1   0 11111111111111111111111111111111
     0  32 0
     1   0 1
   huge(0)=2147483647 0 1111111111111111111111111111111

   integer(kind=int64):
                      0  64 0000000000000000000000000000000000000000000000000000000000000000
                     16   4 0000000000000000000000000000000000000000000000000000000000010000
                    512   9 0000000000000000000000000000000000000000000000000000001000000000
                  16384  14 0000000000000000000000000000000000000000000000000100000000000000
                 524288  19 0000000000000000000000000000000000000000000010000000000000000000
               16777216  24 0000000000000000000000000000000000000001000000000000000000000000
              536870912  29 0000000000000000000000000000000000100000000000000000000000000000
            17179869184  34 0000000000000000000000000000010000000000000000000000000000000000
           549755813888  39 0000000000000000000000001000000000000000000000000000000000000000
         17592186044416  44 0000000000000000000100000000000000000000000000000000000000000000
        562949953421312  49 0000000000000010000000000000000000000000000000000000000000000000
      18014398509481984  54 0000000001000000000000000000000000000000000000000000000000000000
     576460752303423488  59 0000100000000000000000000000000000000000000000000000000000000000
    9223372036854775807   0 0111111111111111111111111111111111111111111111111111111111111111(huge(0_int64))

.fam T
.fi
.SH STANDARD

[[Fortran 2008]] and later
.SH CLASS

[[Elemental function]]
.SH SEE ALSO

\fBbit_size\fP(3), \fBpopcnt\fP(3), \fBpoppar\fP(3), \fBleadz\fP(3)
.SS JSU
