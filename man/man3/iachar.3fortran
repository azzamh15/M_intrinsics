." Text automatically generated by txt2man
.TH "iachar" "3fortran" "February 11, 2021" "" "" " "
." -----------------------------------------------------------------
." * set default formatting
." disable hyphenation
.nh
." disable justification (adjust text to left margin only)
.ad l
." -----------------------------------------------------------------
.SH NAME
\fBiachar(3f) \fP- [FORTRAN:INTRINSIC:CHARACTER] Code in ASCII collating sequence
\fB
.SH SYNTAX
result = \fBiachar\fP(c [, kind])
.SH DESCRIPTION
\fBiachar\fP(c) returns the code for the ASCII character
in the first character position of C.
.SH ARGUMENTS
.TP
.B C
Shall be a scalar CHARACTER, with \fBintent\fP(in)
.TP
.B KIND
(Optional) An INTEGER initialization
expression indicating the kind parameter of the result.
.SH RETURN VALUE
The return value is of type INTEGER and of kind KIND. If
KIND is absent, the return value is of default integer kind.
.SH EXAMPLE
Sample program:
.PP
.nf
.fam C
   program demo_iachar
   implicit none
   ! create function to convert uppercase letters to lowercase
      write(*,'(a)')lower('abcdefg ABCDEFG')
   contains
   !
   elemental pure function lower(str) result (string)
   ! Changes a string to lowercase
   character(*), intent(In)     :: str
   character(len(str))          :: string
   integer                      :: i
      string = str
      ! step thru each letter in the string in specified range
      do i = 1, len(str)
         select case (str(i:i))
         case ('A':'Z') ! change letter to miniscule
            string(i:i) = char(iachar(str(i:i))+32)
         case default
         end select
      end do
   end function lower
   !
   end program demo_iachar

.fam T
.fi
.SH NOTE
See [[ichar]] for a discussion of converting between numerical
values and formatted string representations.
.SH STANDARD
[[Fortran 95]] and later, with KIND argument [[Fortran 2003]] and later
.SH CLASS
[[Elemental procedure|Elemental function]]
.SH SEE ALSO
[[achar]], [[char]], [[ichar]]
.PP
Functions that perform operations on character strings, return lengths
of arguments, and search for certain arguments:
.TP
.B Elemental:
\fBadjustl\fP(3), \fBadjustr\fP(3), \fBindex\fP(3), \fBlen_trim\fP(3),
\fBscan\fP(3), \fBverify\fP(3)
.TP
.B Nonelemental:
\fBrepeat\fP(3), \fBtrim\fP(3)
