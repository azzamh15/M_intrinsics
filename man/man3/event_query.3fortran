." Text automatically generated by txt2man
.TH "event_query" "3fortran" "October 07, 2020" "" "" " "
." -----------------------------------------------------------------
." * set default formatting
." disable hyphenation
.nh
." disable justification (adjust text to left margin only)
.ad l
." -----------------------------------------------------------------
.SH NAME
\fBevent_query(3f) \fP- [FORTRAN:INTRINSIC:COLLECTIVE] Query whether a coarray
\fBevent has occurred
\fB
.SH SYNTAX
call \fBEVENT_QUERY\fP(EVENT, COUNT [, STAT])
.SH DESCRIPTION
EVENT_QUERY assigns the number of events to COUNT which have been
posted to the EVENT variable and not yet been removed by calling
EVENT_WAIT. When STAT is present and the invocation was
successful, it is assigned the value 0. If it is present and the
invocation has failed, it is assigned a positive value and COUNT is
assigned the value \fB-1\fP.
.SH ARGUMENTS
.TP
.B EVENT
(intent(in)) Scalar of type event_type, defined in
iso_fortran_env; shall not be coindexed.
.TP
.B COUNT
(intent(out))Scalar integer with at least the precision of
default integer.
.TP
.B STAT
(OPTIONAL) Scalar default-kind integer variable.
.SH EXAMPLE
Sample program:
.PP
.nf
.fam C
   program demo_event_query
     use iso_fortran_env
     implicit none
     type(event_type) :: event_value_has_been_set[*]
     integer :: cnt
     if (this_image() == 1) then
       call event_query(event_value_has_been_set, cnt)
       if (cnt > 0) write(*,*) "Value has been set"
     elseif (this_image() == 2) then
       event post(event_value_has_been_set[1])
     endif
   end program demo_event_query

.fam T
.fi
.SH STANDARD
[[TS 18508]] or later
.SH CLASS
Subroutine
