." Text automatically generated by txt2man
.TH "selected_real_kind" "3fortran" "October 07, 2020" "" "" " "
." -----------------------------------------------------------------
." * set default formatting
." disable hyphenation
.nh
." disable justification (adjust text to left margin only)
.ad l
." -----------------------------------------------------------------
.SH NAME
\fBselected_real_kind(3f) \fP- [FORTRAN:INTRINSIC:KIND] Choose real kind
\fB
.SH SYNTAX
result = \fBselected_real_kind\fP([p, r, radix])
.SH DESCRIPTION
\fBselected_real_kind\fP(p, r, radix) return the kind value of a real data
type with decimal precision of at least P digits, exponent range of
at least R, and with a radix of RADIX.
.SH ARGUMENTS
.TP
.B P
(Optional) shall be a scalar and of type INTEGER.
.TP
.B R
(Optional) shall be a scalar and of type INTEGER.
.TP
.B RADIX
(Optional) shall be a scalar and of type INTEGER.
.PP
Before [[Fortran 2008]], at least one of the arguments R or P
shall be present; since [[Fortran 2008]], they are assumed to be zero
if absent.
.SH RETURN VALUE
selected_real_kind returns the value of the kind type parameter of
a real data type with decimal precision of at least P digits, a
decimal exponent range of at least R, and with the requested
RADIX. If the RADIX parameter is absent, real kinds with
any radix can be returned. If more than one real data type meet the
criteria, the kind of the data type with the smallest decimal precision
is returned. If no real data type matches the criteria, the result is
.RE
.IP \(bu 3
\fB-1\fP if the processor does not support a real data type with a
precision greater than or equal to P, but the R and RADIX
requirements can be fulfilled
.RS
.IP \(bu 3
\fB-2\fP if the processor does not support a real type with an exponent
range greater than or equal to R, but P and RADIX are
fulfillable
.IP \(bu 3
\fB-3\fP if RADIX but not P and R requirements are fulfillable
.IP \(bu 3
\fB-4\fP if RADIX and either P or R requirements are fulfillable
.IP \(bu 3
\fB-5\fP if there is no real type with the given RADIX
.SH EXAMPLE
Sample program:
.PP
.nf
.fam C
   program demo_selected_real_kind
   implicit none
     integer,parameter :: p6 = selected_real_kind(6)
     integer,parameter :: p10r100 = selected_real_kind(10,100)
     integer,parameter :: r400 = selected_real_kind(r=400)
     real(kind=p6) :: x
     real(kind=p10r100) :: y
     real(kind=r400) :: z

     print *, precision(x), range(x)
     print *, precision(y), range(y)
     print *, precision(z), range(z)
   end program demo_selected_real_kind

.fam T
.fi
.SH STANDARD
[[Fortran 95]] and later; with RADIX [[Fortran 2008]] and later
.SH CLASS
Transformational function
.SH SEE ALSO
\fBprecision\fP(3), \fBrange\fP(3), \fBradix\fP(3)
