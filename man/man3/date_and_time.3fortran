." Text automatically generated by txt2man
.TH "date_and_time" "3fortran" "October 07, 2020" "" "" " "
." -----------------------------------------------------------------
." * set default formatting
." disable hyphenation
.nh
." disable justification (adjust text to left margin only)
.ad l
." -----------------------------------------------------------------
.SH NAME
\fBdate_and_time(3f) \fP- [FORTRAN:INTRINSIC:SYSTEM ENVIRONMENT] gets current time
\fB
.SH SYNTAX
call \fBdate_and_time\fP([date, time, zone, values])
.SH DESCRIPTION
\fBdate_and_time\fP(date, time, zone, values) gets the corresponding date and
time information from the real-time system clock. DATE is \fBintent\fP(out)
and has form ccyymmdd. TIME is \fBintent\fP(out) and has form hhmmss.sss.
ZONE is \fBintent\fP(out) and has form (+-)hhmm, representing the difference
with respect to Coordinated Universal Time (UTC). Unavailable time and
date parameters return blanks.
.PP
VALUES is \fBintent\fP(out) and provides the following:
.IP \(bu 3
\fBvalue\fP(1): - The year
.IP \(bu 3
\fBvalue\fP(2): - The month
.IP \(bu 3
\fBvalue\fP(3): - The day of the month
.IP \(bu 3
\fBvalue\fP(4): - Time difference with UTC in minutes
.IP \(bu 3
\fBvalue\fP(5): - The hour of the day
.IP \(bu 3
\fBvalue\fP(6): - The minutes of the hour
.IP \(bu 3
\fBvalue\fP(7): - The seconds of the minute
.IP \(bu 3
\fBvalue\fP(8): - The milliseconds of the second
.SH ARGUMENTS
.TP
.B DATE
(Optional) The type shall be \fBcharacter\fP(len=8) or larger,
and of default kind.
.TP
.B TIME
(Optional) The type shall be \fBcharacter\fP(len=10) or
larger, and of default kind.
.TP
.B ZONE
(Optional) The type shall be \fBcharacter\fP(len=5) or larger,
and of default kind.
.TP
.B VALUES
(Optional) The type shall be \fBinteger\fP(8).
.SH RETURN VALUE
None
.SH EXAMPLE
Sample program:
.PP
.nf
.fam C
    program demo_time_and_date
    implicit none
    character(8)  :: date
    character(10) :: time
    character(5)  :: zone
    integer,dimension(8) :: values
        ! using keyword arguments
        call date_and_time(date,time,zone,values)
        call date_and_time(DATE=date,ZONE=zone)
        call date_and_time(TIME=time)
        call date_and_time(VALUES=values)
        print '(a,2x,a,2x,a)', date, time, zone
        print '(8i5)', values

    end program demo_time_and_date

.fam T
.fi
.SH STANDARD
[[Fortran 95]] and later
.SH CLASS
Subroutine
.SH SEE ALSO
\fBcpu_time\fP(3), \fBsystem_clock\fP(3)
